// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common_msgs/external_command_msgs/action_command.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/header.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto;
namespace apollo {
namespace external_command {
class ActionCommand;
class ActionCommandDefaultTypeInternal;
extern ActionCommandDefaultTypeInternal _ActionCommand_default_instance_;
}  // namespace external_command
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::external_command::ActionCommand* Arena::CreateMaybeMessage<::apollo::external_command::ActionCommand>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace external_command {

enum ActionCommandType : int {
  FOLLOW = 1,
  CHANGE_LEFT = 2,
  CHANGE_RIGHT = 3,
  PULL_OVER = 4,
  STOP = 5,
  START = 6,
  CLEAR_PLANNING = 7,
  SWITCH_TO_MANUAL = 50,
  SWITCH_TO_AUTO = 51,
  VIN_REQ = 52
};
bool ActionCommandType_IsValid(int value);
constexpr ActionCommandType ActionCommandType_MIN = FOLLOW;
constexpr ActionCommandType ActionCommandType_MAX = VIN_REQ;
constexpr int ActionCommandType_ARRAYSIZE = ActionCommandType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActionCommandType_descriptor();
template<typename T>
inline const std::string& ActionCommandType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ActionCommandType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ActionCommandType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ActionCommandType_descriptor(), enum_t_value);
}
inline bool ActionCommandType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ActionCommandType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ActionCommandType>(
    ActionCommandType_descriptor(), name, value);
}
// ===================================================================

class ActionCommand PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.external_command.ActionCommand) */ {
 public:
  inline ActionCommand() : ActionCommand(nullptr) {}
  virtual ~ActionCommand();

  ActionCommand(const ActionCommand& from);
  ActionCommand(ActionCommand&& from) noexcept
    : ActionCommand() {
    *this = ::std::move(from);
  }

  inline ActionCommand& operator=(const ActionCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionCommand& operator=(ActionCommand&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActionCommand& default_instance();

  static inline const ActionCommand* internal_default_instance() {
    return reinterpret_cast<const ActionCommand*>(
               &_ActionCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ActionCommand& a, ActionCommand& b) {
    a.Swap(&b);
  }
  inline void Swap(ActionCommand* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionCommand* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActionCommand* New() const final {
    return CreateMaybeMessage<ActionCommand>(nullptr);
  }

  ActionCommand* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActionCommand>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActionCommand& from);
  void MergeFrom(const ActionCommand& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionCommand* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.external_command.ActionCommand";
  }
  protected:
  explicit ActionCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto);
    return ::descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kCommandFieldNumber = 3,
    kCommandIdFieldNumber = 2,
  };
  // optional .apollo.common.Header header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::apollo::common::Header& header() const;
  ::apollo::common::Header* release_header();
  ::apollo::common::Header* mutable_header();
  void set_allocated_header(::apollo::common::Header* header);
  private:
  const ::apollo::common::Header& _internal_header() const;
  ::apollo::common::Header* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::apollo::common::Header* header);
  ::apollo::common::Header* unsafe_arena_release_header();

  // required .apollo.external_command.ActionCommandType command = 3;
  bool has_command() const;
  private:
  bool _internal_has_command() const;
  public:
  void clear_command();
  ::apollo::external_command::ActionCommandType command() const;
  void set_command(::apollo::external_command::ActionCommandType value);
  private:
  ::apollo::external_command::ActionCommandType _internal_command() const;
  void _internal_set_command(::apollo::external_command::ActionCommandType value);
  public:

  // optional int64 command_id = 2 [default = -1];
  bool has_command_id() const;
  private:
  bool _internal_has_command_id() const;
  public:
  void clear_command_id();
  ::PROTOBUF_NAMESPACE_ID::int64 command_id() const;
  void set_command_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_command_id() const;
  void _internal_set_command_id(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.external_command.ActionCommand)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::apollo::common::Header* header_;
  int command_;
  ::PROTOBUF_NAMESPACE_ID::int64 command_id_;
  friend struct ::TableStruct_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ActionCommand

// optional .apollo.common.Header header = 1;
inline bool ActionCommand::_internal_has_header() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || header_ != nullptr);
  return value;
}
inline bool ActionCommand::has_header() const {
  return _internal_has_header();
}
inline const ::apollo::common::Header& ActionCommand::_internal_header() const {
  const ::apollo::common::Header* p = header_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::common::Header&>(
      ::apollo::common::_Header_default_instance_);
}
inline const ::apollo::common::Header& ActionCommand::header() const {
  // @@protoc_insertion_point(field_get:apollo.external_command.ActionCommand.header)
  return _internal_header();
}
inline void ActionCommand::unsafe_arena_set_allocated_header(
    ::apollo::common::Header* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.external_command.ActionCommand.header)
}
inline ::apollo::common::Header* ActionCommand::release_header() {
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::common::Header* temp = header_;
  header_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::apollo::common::Header* ActionCommand::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:apollo.external_command.ActionCommand.header)
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::common::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::apollo::common::Header* ActionCommand::_internal_mutable_header() {
  _has_bits_[0] |= 0x00000001u;
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::common::Header>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::apollo::common::Header* ActionCommand::mutable_header() {
  // @@protoc_insertion_point(field_mutable:apollo.external_command.ActionCommand.header)
  return _internal_mutable_header();
}
inline void ActionCommand::set_allocated_header(::apollo::common::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header)->GetArena();
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:apollo.external_command.ActionCommand.header)
}

// optional int64 command_id = 2 [default = -1];
inline bool ActionCommand::_internal_has_command_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ActionCommand::has_command_id() const {
  return _internal_has_command_id();
}
inline void ActionCommand::clear_command_id() {
  command_id_ = PROTOBUF_LONGLONG(-1);
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ActionCommand::_internal_command_id() const {
  return command_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ActionCommand::command_id() const {
  // @@protoc_insertion_point(field_get:apollo.external_command.ActionCommand.command_id)
  return _internal_command_id();
}
inline void ActionCommand::_internal_set_command_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000004u;
  command_id_ = value;
}
inline void ActionCommand::set_command_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_command_id(value);
  // @@protoc_insertion_point(field_set:apollo.external_command.ActionCommand.command_id)
}

// required .apollo.external_command.ActionCommandType command = 3;
inline bool ActionCommand::_internal_has_command() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ActionCommand::has_command() const {
  return _internal_has_command();
}
inline void ActionCommand::clear_command() {
  command_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::apollo::external_command::ActionCommandType ActionCommand::_internal_command() const {
  return static_cast< ::apollo::external_command::ActionCommandType >(command_);
}
inline ::apollo::external_command::ActionCommandType ActionCommand::command() const {
  // @@protoc_insertion_point(field_get:apollo.external_command.ActionCommand.command)
  return _internal_command();
}
inline void ActionCommand::_internal_set_command(::apollo::external_command::ActionCommandType value) {
  assert(::apollo::external_command::ActionCommandType_IsValid(value));
  _has_bits_[0] |= 0x00000002u;
  command_ = value;
}
inline void ActionCommand::set_command(::apollo::external_command::ActionCommandType value) {
  _internal_set_command(value);
  // @@protoc_insertion_point(field_set:apollo.external_command.ActionCommand.command)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace external_command
}  // namespace apollo

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::apollo::external_command::ActionCommandType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::external_command::ActionCommandType>() {
  return ::apollo::external_command::ActionCommandType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2faction_5fcommand_2eproto
