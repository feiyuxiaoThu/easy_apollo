// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common_msgs/external_command_msgs/chassis_command.proto

#include "modules/common_msgs/external_command_msgs/chassis_command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fproto_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Header_modules_2fcommon_2fproto_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VehicleSignal_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
namespace apollo {
namespace external_command {
class ChassisCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ChassisCommand> _instance;
} _ChassisCommand_default_instance_;
}  // namespace external_command
}  // namespace apollo
static void InitDefaultsscc_info_ChassisCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::external_command::_ChassisCommand_default_instance_;
    new (ptr) ::apollo::external_command::ChassisCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ChassisCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_ChassisCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto}, {
      &scc_info_Header_modules_2fcommon_2fproto_2fheader_2eproto.base,
      &scc_info_VehicleSignal_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::ChassisCommand, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::ChassisCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::ChassisCommand, header_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::ChassisCommand, command_id_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::ChassisCommand, basic_signal_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::ChassisCommand, custom_operation_),
  0,
  3,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::external_command::ChassisCommand)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::external_command::_ChassisCommand_default_instance_),
};

const char descriptor_table_protodef_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\?modules/common_msgs/external_command_m"
  "sgs/chassis_command.proto\022\027apollo.extern"
  "al_command\032\031google/protobuf/any.proto\032!m"
  "odules/common/proto/header.proto\032)module"
  "s/common/proto/vehicle_signal.proto\"\263\001\n\016"
  "ChassisCommand\022%\n\006header\030\001 \001(\0132\025.apollo."
  "common.Header\022\026\n\ncommand_id\030\002 \001(\003:\002-1\0222\n"
  "\014basic_signal\030\003 \001(\0132\034.apollo.common.Vehi"
  "cleSignal\022.\n\020custom_operation\030\004 \001(\0132\024.go"
  "ogle.protobuf.Any"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto_deps[3] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
  &::descriptor_table_modules_2fcommon_2fproto_2fvehicle_5fsignal_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto_sccs[1] = {
  &scc_info_ChassisCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto = {
  false, false, descriptor_table_protodef_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto, "modules/common_msgs/external_command_msgs/chassis_command.proto", 377,
  &descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto_once, descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto_sccs, descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto::offsets,
  file_level_metadata_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto, 1, file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto, file_level_service_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto)), true);
namespace apollo {
namespace external_command {

// ===================================================================

class ChassisCommand::_Internal {
 public:
  using HasBits = decltype(std::declval<ChassisCommand>()._has_bits_);
  static const ::apollo::common::Header& header(const ChassisCommand* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_command_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::common::VehicleSignal& basic_signal(const ChassisCommand* msg);
  static void set_has_basic_signal(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const PROTOBUF_NAMESPACE_ID::Any& custom_operation(const ChassisCommand* msg);
  static void set_has_custom_operation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::common::Header&
ChassisCommand::_Internal::header(const ChassisCommand* msg) {
  return *msg->header_;
}
const ::apollo::common::VehicleSignal&
ChassisCommand::_Internal::basic_signal(const ChassisCommand* msg) {
  return *msg->basic_signal_;
}
const PROTOBUF_NAMESPACE_ID::Any&
ChassisCommand::_Internal::custom_operation(const ChassisCommand* msg) {
  return *msg->custom_operation_;
}
void ChassisCommand::clear_header() {
  if (header_ != nullptr) header_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void ChassisCommand::clear_basic_signal() {
  if (basic_signal_ != nullptr) basic_signal_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
void ChassisCommand::clear_custom_operation() {
  if (custom_operation_ != nullptr) custom_operation_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
ChassisCommand::ChassisCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.external_command.ChassisCommand)
}
ChassisCommand::ChassisCommand(const ChassisCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_basic_signal()) {
    basic_signal_ = new ::apollo::common::VehicleSignal(*from.basic_signal_);
  } else {
    basic_signal_ = nullptr;
  }
  if (from._internal_has_custom_operation()) {
    custom_operation_ = new PROTOBUF_NAMESPACE_ID::Any(*from.custom_operation_);
  } else {
    custom_operation_ = nullptr;
  }
  command_id_ = from.command_id_;
  // @@protoc_insertion_point(copy_constructor:apollo.external_command.ChassisCommand)
}

void ChassisCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ChassisCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&header_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&custom_operation_) -
      reinterpret_cast<char*>(&header_)) + sizeof(custom_operation_));
  command_id_ = PROTOBUF_LONGLONG(-1);
}

ChassisCommand::~ChassisCommand() {
  // @@protoc_insertion_point(destructor:apollo.external_command.ChassisCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ChassisCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete basic_signal_;
  if (this != internal_default_instance()) delete custom_operation_;
}

void ChassisCommand::ArenaDtor(void* object) {
  ChassisCommand* _this = reinterpret_cast< ChassisCommand* >(object);
  (void)_this;
}
void ChassisCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ChassisCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ChassisCommand& ChassisCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ChassisCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fchassis_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void ChassisCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.external_command.ChassisCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(header_ != nullptr);
      header_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(basic_signal_ != nullptr);
      basic_signal_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(custom_operation_ != nullptr);
      custom_operation_->Clear();
    }
    command_id_ = PROTOBUF_LONGLONG(-1);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChassisCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 command_id = 2 [default = -1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_command_id(&has_bits);
          command_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.common.VehicleSignal basic_signal = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_basic_signal(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .google.protobuf.Any custom_operation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom_operation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ChassisCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.external_command.ChassisCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // optional int64 command_id = 2 [default = -1];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_command_id(), target);
  }

  // optional .apollo.common.VehicleSignal basic_signal = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::basic_signal(this), target, stream);
  }

  // optional .google.protobuf.Any custom_operation = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::custom_operation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.external_command.ChassisCommand)
  return target;
}

size_t ChassisCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.external_command.ChassisCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .apollo.common.Header header = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional .apollo.common.VehicleSignal basic_signal = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *basic_signal_);
    }

    // optional .google.protobuf.Any custom_operation = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *custom_operation_);
    }

    // optional int64 command_id = 2 [default = -1];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_command_id());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChassisCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.external_command.ChassisCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ChassisCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ChassisCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.external_command.ChassisCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.external_command.ChassisCommand)
    MergeFrom(*source);
  }
}

void ChassisCommand::MergeFrom(const ChassisCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.external_command.ChassisCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_basic_signal()->::apollo::common::VehicleSignal::MergeFrom(from._internal_basic_signal());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_custom_operation()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_custom_operation());
    }
    if (cached_has_bits & 0x00000008u) {
      command_id_ = from.command_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ChassisCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.external_command.ChassisCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChassisCommand::CopyFrom(const ChassisCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.external_command.ChassisCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChassisCommand::IsInitialized() const {
  return true;
}

void ChassisCommand::InternalSwap(ChassisCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChassisCommand, custom_operation_)
      + sizeof(ChassisCommand::custom_operation_)
      - PROTOBUF_FIELD_OFFSET(ChassisCommand, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
  swap(command_id_, other->command_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChassisCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace external_command
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::external_command::ChassisCommand* Arena::CreateMaybeMessage< ::apollo::external_command::ChassisCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::external_command::ChassisCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
