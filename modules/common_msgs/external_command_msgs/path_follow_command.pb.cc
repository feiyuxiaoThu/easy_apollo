// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common_msgs/external_command_msgs/path_follow_command.proto

#include "modules/common_msgs/external_command_msgs/path_follow_command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fproto_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Header_modules_2fcommon_2fproto_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fgeometry_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Point_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fgeometry_2eproto;
namespace apollo {
namespace external_command {
class PathBoundaryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PathBoundary> _instance;
} _PathBoundary_default_instance_;
class BoundaryWithWidthDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BoundaryWithWidth> _instance;
} _BoundaryWithWidth_default_instance_;
class PathFollowCommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PathFollowCommand> _instance;
} _PathFollowCommand_default_instance_;
}  // namespace external_command
}  // namespace apollo
static void InitDefaultsscc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::external_command::_BoundaryWithWidth_default_instance_;
    new (ptr) ::apollo::external_command::BoundaryWithWidth();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto}, {}};

static void InitDefaultsscc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::external_command::_PathBoundary_default_instance_;
    new (ptr) ::apollo::external_command::PathBoundary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto}, {
      &scc_info_Point_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fgeometry_2eproto.base,}};

static void InitDefaultsscc_info_PathFollowCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::external_command::_PathFollowCommand_default_instance_;
    new (ptr) ::apollo::external_command::PathFollowCommand();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_PathFollowCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_PathFollowCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto}, {
      &scc_info_Header_modules_2fcommon_2fproto_2fheader_2eproto.base,
      &scc_info_Point_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fgeometry_2eproto.base,
      &scc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base,
      &scc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathBoundary, left_boundary_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathBoundary, right_boundary_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::BoundaryWithWidth, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::BoundaryWithWidth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::BoundaryWithWidth, left_path_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::BoundaryWithWidth, right_path_width_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, header_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, command_id_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, way_point_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, target_speed_),
  PROTOBUF_FIELD_OFFSET(::apollo::external_command::PathFollowCommand, boundary_),
  0,
  2,
  ~0u,
  ~0u,
  ~0u,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apollo::external_command::PathBoundary)},
  { 7, 14, sizeof(::apollo::external_command::BoundaryWithWidth)},
  { 16, 28, sizeof(::apollo::external_command::PathFollowCommand)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::external_command::_PathBoundary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::external_command::_BoundaryWithWidth_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::external_command::_PathFollowCommand_default_instance_),
};

const char descriptor_table_protodef_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nCmodules/common_msgs/external_command_m"
  "sgs/path_follow_command.proto\022\027apollo.ex"
  "ternal_command\032!modules/common/proto/hea"
  "der.proto\0328modules/common_msgs/external_"
  "command_msgs/geometry.proto\"}\n\014PathBound"
  "ary\0225\n\rleft_boundary\030\001 \003(\0132\036.apollo.exte"
  "rnal_command.Point\0226\n\016right_boundary\030\002 \003"
  "(\0132\036.apollo.external_command.Point\"F\n\021Bo"
  "undaryWithWidth\022\027\n\017left_path_width\030\001 \002(\001"
  "\022\030\n\020right_path_width\030\002 \002(\001\"\262\002\n\021PathFollo"
  "wCommand\022%\n\006header\030\001 \001(\0132\025.apollo.common"
  ".Header\022\026\n\ncommand_id\030\002 \001(\003:\002-1\0221\n\tway_p"
  "oint\030\003 \003(\0132\036.apollo.external_command.Poi"
  "nt\022>\n\rpath_boundary\030\004 \001(\0132%.apollo.exter"
  "nal_command.PathBoundaryH\000\022I\n\023boundary_w"
  "ith_width\030\005 \001(\0132*.apollo.external_comman"
  "d.BoundaryWithWidthH\000\022\024\n\014target_speed\030\006 "
  "\001(\001B\n\n\010boundary"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto_deps[2] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
  &::descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fgeometry_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto_sccs[3] = {
  &scc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base,
  &scc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base,
  &scc_info_PathFollowCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto = {
  false, false, descriptor_table_protodef_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto, "modules/common_msgs/external_command_msgs/path_follow_command.proto", 695,
  &descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto_once, descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto_sccs, descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto_deps, 3, 2,
  schemas, file_default_instances, TableStruct_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto::offsets,
  file_level_metadata_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto, 3, file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto, file_level_service_descriptors_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto)), true);
namespace apollo {
namespace external_command {

// ===================================================================

class PathBoundary::_Internal {
 public:
};

void PathBoundary::clear_left_boundary() {
  left_boundary_.Clear();
}
void PathBoundary::clear_right_boundary() {
  right_boundary_.Clear();
}
PathBoundary::PathBoundary(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  left_boundary_(arena),
  right_boundary_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.external_command.PathBoundary)
}
PathBoundary::PathBoundary(const PathBoundary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      left_boundary_(from.left_boundary_),
      right_boundary_(from.right_boundary_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.external_command.PathBoundary)
}

void PathBoundary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base);
}

PathBoundary::~PathBoundary() {
  // @@protoc_insertion_point(destructor:apollo.external_command.PathBoundary)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PathBoundary::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PathBoundary::ArenaDtor(void* object) {
  PathBoundary* _this = reinterpret_cast< PathBoundary* >(object);
  (void)_this;
}
void PathBoundary::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PathBoundary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PathBoundary& PathBoundary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PathBoundary_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void PathBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.external_command.PathBoundary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  left_boundary_.Clear();
  right_boundary_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PathBoundary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apollo.external_command.Point left_boundary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_left_boundary(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .apollo.external_command.Point right_boundary = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_right_boundary(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PathBoundary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.external_command.PathBoundary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.external_command.Point left_boundary = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_left_boundary_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_left_boundary(i), target, stream);
  }

  // repeated .apollo.external_command.Point right_boundary = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_right_boundary_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_right_boundary(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.external_command.PathBoundary)
  return target;
}

size_t PathBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.external_command.PathBoundary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.external_command.Point left_boundary = 1;
  total_size += 1UL * this->_internal_left_boundary_size();
  for (const auto& msg : this->left_boundary_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.external_command.Point right_boundary = 2;
  total_size += 1UL * this->_internal_right_boundary_size();
  for (const auto& msg : this->right_boundary_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathBoundary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.external_command.PathBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const PathBoundary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PathBoundary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.external_command.PathBoundary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.external_command.PathBoundary)
    MergeFrom(*source);
  }
}

void PathBoundary::MergeFrom(const PathBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.external_command.PathBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  left_boundary_.MergeFrom(from.left_boundary_);
  right_boundary_.MergeFrom(from.right_boundary_);
}

void PathBoundary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.external_command.PathBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathBoundary::CopyFrom(const PathBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.external_command.PathBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathBoundary::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(left_boundary_)) return false;
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(right_boundary_)) return false;
  return true;
}

void PathBoundary::InternalSwap(PathBoundary* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  left_boundary_.InternalSwap(&other->left_boundary_);
  right_boundary_.InternalSwap(&other->right_boundary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PathBoundary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BoundaryWithWidth::_Internal {
 public:
  using HasBits = decltype(std::declval<BoundaryWithWidth>()._has_bits_);
  static void set_has_left_path_width(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_right_path_width(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x00000003) ^ 0x00000003) != 0;
  }
};

BoundaryWithWidth::BoundaryWithWidth(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.external_command.BoundaryWithWidth)
}
BoundaryWithWidth::BoundaryWithWidth(const BoundaryWithWidth& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&left_path_width_, &from.left_path_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_path_width_) -
    reinterpret_cast<char*>(&left_path_width_)) + sizeof(right_path_width_));
  // @@protoc_insertion_point(copy_constructor:apollo.external_command.BoundaryWithWidth)
}

void BoundaryWithWidth::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&left_path_width_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&right_path_width_) -
      reinterpret_cast<char*>(&left_path_width_)) + sizeof(right_path_width_));
}

BoundaryWithWidth::~BoundaryWithWidth() {
  // @@protoc_insertion_point(destructor:apollo.external_command.BoundaryWithWidth)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BoundaryWithWidth::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BoundaryWithWidth::ArenaDtor(void* object) {
  BoundaryWithWidth* _this = reinterpret_cast< BoundaryWithWidth* >(object);
  (void)_this;
}
void BoundaryWithWidth::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BoundaryWithWidth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BoundaryWithWidth& BoundaryWithWidth::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BoundaryWithWidth_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void BoundaryWithWidth::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.external_command.BoundaryWithWidth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&left_path_width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&right_path_width_) -
        reinterpret_cast<char*>(&left_path_width_)) + sizeof(right_path_width_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BoundaryWithWidth::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required double left_path_width = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_left_path_width(&has_bits);
          left_path_width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required double right_path_width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_right_path_width(&has_bits);
          right_path_width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BoundaryWithWidth::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.external_command.BoundaryWithWidth)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double left_path_width = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_left_path_width(), target);
  }

  // required double right_path_width = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_right_path_width(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.external_command.BoundaryWithWidth)
  return target;
}

size_t BoundaryWithWidth::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.external_command.BoundaryWithWidth)
  size_t total_size = 0;

  if (_internal_has_left_path_width()) {
    // required double left_path_width = 1;
    total_size += 1 + 8;
  }

  if (_internal_has_right_path_width()) {
    // required double right_path_width = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t BoundaryWithWidth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.external_command.BoundaryWithWidth)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double left_path_width = 1;
    total_size += 1 + 8;

    // required double right_path_width = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoundaryWithWidth::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.external_command.BoundaryWithWidth)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundaryWithWidth* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BoundaryWithWidth>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.external_command.BoundaryWithWidth)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.external_command.BoundaryWithWidth)
    MergeFrom(*source);
  }
}

void BoundaryWithWidth::MergeFrom(const BoundaryWithWidth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.external_command.BoundaryWithWidth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      left_path_width_ = from.left_path_width_;
    }
    if (cached_has_bits & 0x00000002u) {
      right_path_width_ = from.right_path_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BoundaryWithWidth::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.external_command.BoundaryWithWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundaryWithWidth::CopyFrom(const BoundaryWithWidth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.external_command.BoundaryWithWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundaryWithWidth::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_has_bits_)) return false;
  return true;
}

void BoundaryWithWidth::InternalSwap(BoundaryWithWidth* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoundaryWithWidth, right_path_width_)
      + sizeof(BoundaryWithWidth::right_path_width_)
      - PROTOBUF_FIELD_OFFSET(BoundaryWithWidth, left_path_width_)>(
          reinterpret_cast<char*>(&left_path_width_),
          reinterpret_cast<char*>(&other->left_path_width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BoundaryWithWidth::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PathFollowCommand::_Internal {
 public:
  using HasBits = decltype(std::declval<PathFollowCommand>()._has_bits_);
  static const ::apollo::common::Header& header(const PathFollowCommand* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_command_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::external_command::PathBoundary& path_boundary(const PathFollowCommand* msg);
  static const ::apollo::external_command::BoundaryWithWidth& boundary_with_width(const PathFollowCommand* msg);
  static void set_has_target_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::common::Header&
PathFollowCommand::_Internal::header(const PathFollowCommand* msg) {
  return *msg->header_;
}
const ::apollo::external_command::PathBoundary&
PathFollowCommand::_Internal::path_boundary(const PathFollowCommand* msg) {
  return *msg->boundary_.path_boundary_;
}
const ::apollo::external_command::BoundaryWithWidth&
PathFollowCommand::_Internal::boundary_with_width(const PathFollowCommand* msg) {
  return *msg->boundary_.boundary_with_width_;
}
void PathFollowCommand::clear_header() {
  if (header_ != nullptr) header_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void PathFollowCommand::clear_way_point() {
  way_point_.Clear();
}
void PathFollowCommand::set_allocated_path_boundary(::apollo::external_command::PathBoundary* path_boundary) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_boundary();
  if (path_boundary) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(path_boundary);
    if (message_arena != submessage_arena) {
      path_boundary = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, path_boundary, submessage_arena);
    }
    set_has_path_boundary();
    boundary_.path_boundary_ = path_boundary;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.external_command.PathFollowCommand.path_boundary)
}
void PathFollowCommand::set_allocated_boundary_with_width(::apollo::external_command::BoundaryWithWidth* boundary_with_width) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_boundary();
  if (boundary_with_width) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(boundary_with_width);
    if (message_arena != submessage_arena) {
      boundary_with_width = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, boundary_with_width, submessage_arena);
    }
    set_has_boundary_with_width();
    boundary_.boundary_with_width_ = boundary_with_width;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.external_command.PathFollowCommand.boundary_with_width)
}
PathFollowCommand::PathFollowCommand(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  way_point_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.external_command.PathFollowCommand)
}
PathFollowCommand::PathFollowCommand(const PathFollowCommand& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      way_point_(from.way_point_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  ::memcpy(&target_speed_, &from.target_speed_,
    static_cast<size_t>(reinterpret_cast<char*>(&command_id_) -
    reinterpret_cast<char*>(&target_speed_)) + sizeof(command_id_));
  clear_has_boundary();
  switch (from.boundary_case()) {
    case kPathBoundary: {
      _internal_mutable_path_boundary()->::apollo::external_command::PathBoundary::MergeFrom(from._internal_path_boundary());
      break;
    }
    case kBoundaryWithWidth: {
      _internal_mutable_boundary_with_width()->::apollo::external_command::BoundaryWithWidth::MergeFrom(from._internal_boundary_with_width());
      break;
    }
    case BOUNDARY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.external_command.PathFollowCommand)
}

void PathFollowCommand::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PathFollowCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&header_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&target_speed_) -
      reinterpret_cast<char*>(&header_)) + sizeof(target_speed_));
  command_id_ = PROTOBUF_LONGLONG(-1);
  clear_has_boundary();
}

PathFollowCommand::~PathFollowCommand() {
  // @@protoc_insertion_point(destructor:apollo.external_command.PathFollowCommand)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PathFollowCommand::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (has_boundary()) {
    clear_boundary();
  }
}

void PathFollowCommand::ArenaDtor(void* object) {
  PathFollowCommand* _this = reinterpret_cast< PathFollowCommand* >(object);
  (void)_this;
}
void PathFollowCommand::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PathFollowCommand::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PathFollowCommand& PathFollowCommand::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PathFollowCommand_modules_2fcommon_5fmsgs_2fexternal_5fcommand_5fmsgs_2fpath_5ffollow_5fcommand_2eproto.base);
  return *internal_default_instance();
}


void PathFollowCommand::clear_boundary() {
// @@protoc_insertion_point(one_of_clear_start:apollo.external_command.PathFollowCommand)
  switch (boundary_case()) {
    case kPathBoundary: {
      if (GetArena() == nullptr) {
        delete boundary_.path_boundary_;
      }
      break;
    }
    case kBoundaryWithWidth: {
      if (GetArena() == nullptr) {
        delete boundary_.boundary_with_width_;
      }
      break;
    }
    case BOUNDARY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BOUNDARY_NOT_SET;
}


void PathFollowCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.external_command.PathFollowCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  way_point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != nullptr);
    header_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    target_speed_ = 0;
    command_id_ = PROTOBUF_LONGLONG(-1);
  }
  clear_boundary();
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PathFollowCommand::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int64 command_id = 2 [default = -1];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_command_id(&has_bits);
          command_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.external_command.Point way_point = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_way_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // .apollo.external_command.PathBoundary path_boundary = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_path_boundary(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .apollo.external_command.BoundaryWithWidth boundary_with_width = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_boundary_with_width(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double target_speed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_target_speed(&has_bits);
          target_speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PathFollowCommand::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.external_command.PathFollowCommand)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // optional int64 command_id = 2 [default = -1];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_command_id(), target);
  }

  // repeated .apollo.external_command.Point way_point = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_way_point_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_way_point(i), target, stream);
  }

  switch (boundary_case()) {
    case kPathBoundary: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          4, _Internal::path_boundary(this), target, stream);
      break;
    }
    case kBoundaryWithWidth: {
      target = stream->EnsureSpace(target);
      target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(
          5, _Internal::boundary_with_width(this), target, stream);
      break;
    }
    default: ;
  }
  // optional double target_speed = 6;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_target_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.external_command.PathFollowCommand)
  return target;
}

size_t PathFollowCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.external_command.PathFollowCommand)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.external_command.Point way_point = 3;
  total_size += 1UL * this->_internal_way_point_size();
  for (const auto& msg : this->way_point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .apollo.common.Header header = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *header_);
    }

    // optional double target_speed = 6;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional int64 command_id = 2 [default = -1];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_command_id());
    }

  }
  switch (boundary_case()) {
    // .apollo.external_command.PathBoundary path_boundary = 4;
    case kPathBoundary: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *boundary_.path_boundary_);
      break;
    }
    // .apollo.external_command.BoundaryWithWidth boundary_with_width = 5;
    case kBoundaryWithWidth: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *boundary_.boundary_with_width_);
      break;
    }
    case BOUNDARY_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathFollowCommand::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.external_command.PathFollowCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const PathFollowCommand* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PathFollowCommand>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.external_command.PathFollowCommand)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.external_command.PathFollowCommand)
    MergeFrom(*source);
  }
}

void PathFollowCommand::MergeFrom(const PathFollowCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.external_command.PathFollowCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  way_point_.MergeFrom(from.way_point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
    }
    if (cached_has_bits & 0x00000002u) {
      target_speed_ = from.target_speed_;
    }
    if (cached_has_bits & 0x00000004u) {
      command_id_ = from.command_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  switch (from.boundary_case()) {
    case kPathBoundary: {
      _internal_mutable_path_boundary()->::apollo::external_command::PathBoundary::MergeFrom(from._internal_path_boundary());
      break;
    }
    case kBoundaryWithWidth: {
      _internal_mutable_boundary_with_width()->::apollo::external_command::BoundaryWithWidth::MergeFrom(from._internal_boundary_with_width());
      break;
    }
    case BOUNDARY_NOT_SET: {
      break;
    }
  }
}

void PathFollowCommand::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.external_command.PathFollowCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathFollowCommand::CopyFrom(const PathFollowCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.external_command.PathFollowCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathFollowCommand::IsInitialized() const {
  if (!::PROTOBUF_NAMESPACE_ID::internal::AllAreInitialized(way_point_)) return false;
  switch (boundary_case()) {
    case kPathBoundary: {
      if (has_path_boundary()) {
        if (!this->path_boundary().IsInitialized()) return false;
      }
      break;
    }
    case kBoundaryWithWidth: {
      if (has_boundary_with_width()) {
        if (!this->boundary_with_width().IsInitialized()) return false;
      }
      break;
    }
    case BOUNDARY_NOT_SET: {
      break;
    }
  }
  return true;
}

void PathFollowCommand::InternalSwap(PathFollowCommand* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  way_point_.InternalSwap(&other->way_point_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PathFollowCommand, target_speed_)
      + sizeof(PathFollowCommand::target_speed_)
      - PROTOBUF_FIELD_OFFSET(PathFollowCommand, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
  swap(command_id_, other->command_id_);
  swap(boundary_, other->boundary_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PathFollowCommand::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace external_command
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::external_command::PathBoundary* Arena::CreateMaybeMessage< ::apollo::external_command::PathBoundary >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::external_command::PathBoundary >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::external_command::BoundaryWithWidth* Arena::CreateMaybeMessage< ::apollo::external_command::BoundaryWithWidth >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::external_command::BoundaryWithWidth >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::external_command::PathFollowCommand* Arena::CreateMaybeMessage< ::apollo::external_command::PathFollowCommand >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::external_command::PathFollowCommand >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
