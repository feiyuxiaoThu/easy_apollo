// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common_msgs/simulation_msgs/agent.proto

#include "modules/common_msgs/simulation_msgs/agent.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto;
namespace apollo {
namespace simulation {
class AgentConfig_TrackedPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgentConfig_TrackedPoint> _instance;
} _AgentConfig_TrackedPoint_default_instance_;
class AgentConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AgentConfig> _instance;
} _AgentConfig_default_instance_;
}  // namespace simulation
}  // namespace apollo
static void InitDefaultsscc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_AgentConfig_default_instance_;
    new (ptr) ::apollo::simulation::AgentConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto}, {
      &scc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base,}};

static void InitDefaultsscc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_AgentConfig_TrackedPoint_default_instance_;
    new (ptr) ::apollo::simulation::AgentConfig_TrackedPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, x_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, y_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, heading_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, speed_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig_TrackedPoint, acceleration_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, id_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, description_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, width_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, length_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, height_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, type_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, appear_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, disappear_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, tracked_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, motiontype_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, distance_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, start_position_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, end_position_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, start_lane_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, end_lane_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, trigger_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, start_distance_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, start_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, avoid_rear_end_collision_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::AgentConfig, rear_end_collision_distance_),
  5,
  0,
  15,
  16,
  17,
  6,
  7,
  8,
  ~0u,
  11,
  9,
  3,
  4,
  1,
  2,
  12,
  10,
  13,
  14,
  18,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::apollo::simulation::AgentConfig_TrackedPoint)},
  { 15, 40, sizeof(::apollo::simulation::AgentConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_AgentConfig_TrackedPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_AgentConfig_default_instance_),
};

const char descriptor_table_protodef_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/modules/common_msgs/simulation_msgs/ag"
  "ent.proto\022\021apollo.simulation\"\200\010\n\013AgentCo"
  "nfig\022\n\n\002id\030\001 \001(\005\022\023\n\013description\030\002 \001(\t\022\020\n"
  "\005width\030\003 \001(\001:\0012\022\021\n\006length\030\004 \001(\001:\0015\022\023\n\006he"
  "ight\030\005 \001(\001:\0031.8\0221\n\004type\030\006 \001(\0162#.apollo.s"
  "imulation.AgentConfig.Type\022\027\n\013appear_tim"
  "e\030\007 \001(\001B\002\030\001\022\032\n\016disappear_time\030\010 \001(\001B\002\030\001\022"
  "B\n\rtracked_point\030\t \003(\0132+.apollo.simulati"
  "on.AgentConfig.TrackedPoint\022=\n\nmotiontyp"
  "e\030\n \001(\0162).apollo.simulation.AgentConfig."
  "MotionType\022\020\n\010distance\030\013 \001(\001\022C\n\016start_po"
  "sition\030\014 \001(\0132+.apollo.simulation.AgentCo"
  "nfig.TrackedPoint\022A\n\014end_position\030\016 \001(\0132"
  "+.apollo.simulation.AgentConfig.TrackedP"
  "oint\022\022\n\nstart_lane\030\017 \001(\t\022\020\n\010end_lane\030\020 \001"
  "(\t\022@\n\014trigger_type\030\024 \001(\0162*.apollo.simula"
  "tion.AgentConfig.TriggerType\022\026\n\016start_di"
  "stance\030\r \001(\001\022\025\n\nstart_time\030\025 \001(\001:\0010\022&\n\030a"
  "void_rear_end_collision\030\021 \001(\010:\004true\022*\n\033r"
  "ear_end_collision_distance\030\022 \001(\001:\0013B\002\030\001\032"
  "Z\n\014TrackedPoint\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\017\n"
  "\007heading\030\003 \001(\001\022\r\n\005speed\030\004 \001(\001\022\024\n\014acceler"
  "ation\030\005 \001(\001\"k\n\004Type\022\013\n\007VEHICLE\020\000\022\013\n\007BICY"
  "CLE\020\001\022\016\n\nPEDESTRIAN\020\002\022\025\n\021UNKNOWN_UNMOVAB"
  "LE\020\003\022\023\n\017UNKNOWN_MOVABLE\020\004\022\r\n\tBIG_TRUCK\020\005"
  "\"6\n\nMotionType\022\n\n\006STATIC\020\000\022\017\n\013LANE_FOLLO"
  "W\020\001\022\013\n\007TRACKED\020\002\"%\n\013TriggerType\022\014\n\010DISTA"
  "NCE\020\000\022\010\n\004TIME\020\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto_sccs[2] = {
  &scc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base,
  &scc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto = {
  false, false, descriptor_table_protodef_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto, "modules/common_msgs/simulation_msgs/agent.proto", 1095,
  &descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto_once, descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto_sccs, descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto::offsets,
  file_level_metadata_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto, 2, file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto, file_level_service_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto)), true);
namespace apollo {
namespace simulation {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentConfig_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto[0];
}
bool AgentConfig_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgentConfig_Type AgentConfig::VEHICLE;
constexpr AgentConfig_Type AgentConfig::BICYCLE;
constexpr AgentConfig_Type AgentConfig::PEDESTRIAN;
constexpr AgentConfig_Type AgentConfig::UNKNOWN_UNMOVABLE;
constexpr AgentConfig_Type AgentConfig::UNKNOWN_MOVABLE;
constexpr AgentConfig_Type AgentConfig::BIG_TRUCK;
constexpr AgentConfig_Type AgentConfig::Type_MIN;
constexpr AgentConfig_Type AgentConfig::Type_MAX;
constexpr int AgentConfig::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentConfig_MotionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto[1];
}
bool AgentConfig_MotionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgentConfig_MotionType AgentConfig::STATIC;
constexpr AgentConfig_MotionType AgentConfig::LANE_FOLLOW;
constexpr AgentConfig_MotionType AgentConfig::TRACKED;
constexpr AgentConfig_MotionType AgentConfig::MotionType_MIN;
constexpr AgentConfig_MotionType AgentConfig::MotionType_MAX;
constexpr int AgentConfig::MotionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentConfig_TriggerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto[2];
}
bool AgentConfig_TriggerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AgentConfig_TriggerType AgentConfig::DISTANCE;
constexpr AgentConfig_TriggerType AgentConfig::TIME;
constexpr AgentConfig_TriggerType AgentConfig::TriggerType_MIN;
constexpr AgentConfig_TriggerType AgentConfig::TriggerType_MAX;
constexpr int AgentConfig::TriggerType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class AgentConfig_TrackedPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<AgentConfig_TrackedPoint>()._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_heading(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_speed(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_acceleration(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

AgentConfig_TrackedPoint::AgentConfig_TrackedPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.AgentConfig.TrackedPoint)
}
AgentConfig_TrackedPoint::AgentConfig_TrackedPoint(const AgentConfig_TrackedPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&acceleration_) -
    reinterpret_cast<char*>(&x_)) + sizeof(acceleration_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.AgentConfig.TrackedPoint)
}

void AgentConfig_TrackedPoint::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&acceleration_) -
      reinterpret_cast<char*>(&x_)) + sizeof(acceleration_));
}

AgentConfig_TrackedPoint::~AgentConfig_TrackedPoint() {
  // @@protoc_insertion_point(destructor:apollo.simulation.AgentConfig.TrackedPoint)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AgentConfig_TrackedPoint::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AgentConfig_TrackedPoint::ArenaDtor(void* object) {
  AgentConfig_TrackedPoint* _this = reinterpret_cast< AgentConfig_TrackedPoint* >(object);
  (void)_this;
}
void AgentConfig_TrackedPoint::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentConfig_TrackedPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgentConfig_TrackedPoint& AgentConfig_TrackedPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgentConfig_TrackedPoint_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base);
  return *internal_default_instance();
}


void AgentConfig_TrackedPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.AgentConfig.TrackedPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&acceleration_) -
        reinterpret_cast<char*>(&x_)) + sizeof(acceleration_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentConfig_TrackedPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double heading = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_heading(&has_bits);
          heading_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double speed = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_speed(&has_bits);
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double acceleration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_acceleration(&has_bits);
          acceleration_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentConfig_TrackedPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.AgentConfig.TrackedPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // optional double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // optional double heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_heading(), target);
  }

  // optional double speed = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_speed(), target);
  }

  // optional double acceleration = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_acceleration(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.AgentConfig.TrackedPoint)
  return target;
}

size_t AgentConfig_TrackedPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.AgentConfig.TrackedPoint)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional double x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double heading = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double speed = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional double acceleration = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgentConfig_TrackedPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.AgentConfig.TrackedPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentConfig_TrackedPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgentConfig_TrackedPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.AgentConfig.TrackedPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.AgentConfig.TrackedPoint)
    MergeFrom(*source);
  }
}

void AgentConfig_TrackedPoint::MergeFrom(const AgentConfig_TrackedPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.AgentConfig.TrackedPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      heading_ = from.heading_;
    }
    if (cached_has_bits & 0x00000008u) {
      speed_ = from.speed_;
    }
    if (cached_has_bits & 0x00000010u) {
      acceleration_ = from.acceleration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AgentConfig_TrackedPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.AgentConfig.TrackedPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentConfig_TrackedPoint::CopyFrom(const AgentConfig_TrackedPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.AgentConfig.TrackedPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentConfig_TrackedPoint::IsInitialized() const {
  return true;
}

void AgentConfig_TrackedPoint::InternalSwap(AgentConfig_TrackedPoint* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentConfig_TrackedPoint, acceleration_)
      + sizeof(AgentConfig_TrackedPoint::acceleration_)
      - PROTOBUF_FIELD_OFFSET(AgentConfig_TrackedPoint, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentConfig_TrackedPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AgentConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<AgentConfig>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_length(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_type(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_appear_time(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_disappear_time(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_motiontype(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::apollo::simulation::AgentConfig_TrackedPoint& start_position(const AgentConfig* msg);
  static void set_has_start_position(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::simulation::AgentConfig_TrackedPoint& end_position(const AgentConfig* msg);
  static void set_has_end_position(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_start_lane(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_end_lane(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_trigger_type(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_start_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_avoid_rear_end_collision(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_rear_end_collision_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
};

const ::apollo::simulation::AgentConfig_TrackedPoint&
AgentConfig::_Internal::start_position(const AgentConfig* msg) {
  return *msg->start_position_;
}
const ::apollo::simulation::AgentConfig_TrackedPoint&
AgentConfig::_Internal::end_position(const AgentConfig* msg) {
  return *msg->end_position_;
}
AgentConfig::AgentConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tracked_point_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.AgentConfig)
}
AgentConfig::AgentConfig(const AgentConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      tracked_point_(from.tracked_point_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  start_lane_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_start_lane()) {
    start_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_start_lane(), 
      GetArena());
  }
  end_lane_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_end_lane()) {
    end_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_end_lane(), 
      GetArena());
  }
  if (from._internal_has_start_position()) {
    start_position_ = new ::apollo::simulation::AgentConfig_TrackedPoint(*from.start_position_);
  } else {
    start_position_ = nullptr;
  }
  if (from._internal_has_end_position()) {
    end_position_ = new ::apollo::simulation::AgentConfig_TrackedPoint(*from.end_position_);
  } else {
    end_position_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rear_end_collision_distance_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rear_end_collision_distance_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.AgentConfig)
}

void AgentConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base);
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_lane_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_lane_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&start_position_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&start_position_)) + sizeof(start_time_));
  avoid_rear_end_collision_ = true;
  width_ = 2;
  length_ = 5;
  height_ = 1.8;
  rear_end_collision_distance_ = 3;
}

AgentConfig::~AgentConfig() {
  // @@protoc_insertion_point(destructor:apollo.simulation.AgentConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AgentConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  start_lane_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  end_lane_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_position_;
  if (this != internal_default_instance()) delete end_position_;
}

void AgentConfig::ArenaDtor(void* object) {
  AgentConfig* _this = reinterpret_cast< AgentConfig* >(object);
  (void)_this;
}
void AgentConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AgentConfig& AgentConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base);
  return *internal_default_instance();
}


void AgentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.AgentConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tracked_point_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      start_lane_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      end_lane_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(start_position_ != nullptr);
      start_position_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(end_position_ != nullptr);
      end_position_->Clear();
    }
  }
  if (cached_has_bits & 0x000000e0u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&appear_time_) -
        reinterpret_cast<char*>(&id_)) + sizeof(appear_time_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&disappear_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_time_) -
        reinterpret_cast<char*>(&disappear_time_)) + sizeof(start_time_));
    avoid_rear_end_collision_ = true;
    width_ = 2;
  }
  if (cached_has_bits & 0x00070000u) {
    length_ = 5;
    height_ = 1.8;
    rear_end_collision_distance_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_id(&has_bits);
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.AgentConfig.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double width = 3 [default = 2];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_width(&has_bits);
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double length = 4 [default = 5];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_length(&has_bits);
          length_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double height = 5 [default = 1.8];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_height(&has_bits);
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.AgentConfig.Type type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::simulation::AgentConfig_Type_IsValid(val))) {
            _internal_set_type(static_cast<::apollo::simulation::AgentConfig_Type>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double appear_time = 7 [deprecated = true];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_appear_time(&has_bits);
          appear_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double disappear_time = 8 [deprecated = true];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          _Internal::set_has_disappear_time(&has_bits);
          disappear_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.simulation.AgentConfig.TrackedPoint tracked_point = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tracked_point(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.AgentConfig.MotionType motiontype = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::simulation::AgentConfig_MotionType_IsValid(val))) {
            _internal_set_motiontype(static_cast<::apollo::simulation::AgentConfig_MotionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double distance = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          _Internal::set_has_distance(&has_bits);
          distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.AgentConfig.TrackedPoint start_position = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_start_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double start_distance = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          _Internal::set_has_start_distance(&has_bits);
          start_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.AgentConfig.TrackedPoint end_position = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_end_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string start_lane = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_start_lane();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.AgentConfig.start_lane");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string end_lane = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_end_lane();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.AgentConfig.end_lane");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool avoid_rear_end_collision = 17 [default = true];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _Internal::set_has_avoid_rear_end_collision(&has_bits);
          avoid_rear_end_collision_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double rear_end_collision_distance = 18 [default = 3, deprecated = true];
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 145)) {
          _Internal::set_has_rear_end_collision_distance(&has_bits);
          rear_end_collision_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.AgentConfig.TriggerType trigger_type = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::simulation::AgentConfig_TriggerType_IsValid(val))) {
            _internal_set_trigger_type(static_cast<::apollo::simulation::AgentConfig_TriggerType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(20, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double start_time = 21 [default = 0];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 169)) {
          _Internal::set_has_start_time(&has_bits);
          start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AgentConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.AgentConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.AgentConfig.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // optional double width = 3 [default = 2];
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_width(), target);
  }

  // optional double length = 4 [default = 5];
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_length(), target);
  }

  // optional double height = 5 [default = 1.8];
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_height(), target);
  }

  // optional .apollo.simulation.AgentConfig.Type type = 6;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_type(), target);
  }

  // optional double appear_time = 7 [deprecated = true];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_appear_time(), target);
  }

  // optional double disappear_time = 8 [deprecated = true];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_disappear_time(), target);
  }

  // repeated .apollo.simulation.AgentConfig.TrackedPoint tracked_point = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tracked_point_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, this->_internal_tracked_point(i), target, stream);
  }

  // optional .apollo.simulation.AgentConfig.MotionType motiontype = 10;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_motiontype(), target);
  }

  // optional double distance = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_distance(), target);
  }

  // optional .apollo.simulation.AgentConfig.TrackedPoint start_position = 12;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::start_position(this), target, stream);
  }

  // optional double start_distance = 13;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_start_distance(), target);
  }

  // optional .apollo.simulation.AgentConfig.TrackedPoint end_position = 14;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::end_position(this), target, stream);
  }

  // optional string start_lane = 15;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_start_lane().data(), static_cast<int>(this->_internal_start_lane().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.AgentConfig.start_lane");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_start_lane(), target);
  }

  // optional string end_lane = 16;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_end_lane().data(), static_cast<int>(this->_internal_end_lane().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.AgentConfig.end_lane");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_end_lane(), target);
  }

  // optional bool avoid_rear_end_collision = 17 [default = true];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_avoid_rear_end_collision(), target);
  }

  // optional double rear_end_collision_distance = 18 [default = 3, deprecated = true];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(18, this->_internal_rear_end_collision_distance(), target);
  }

  // optional .apollo.simulation.AgentConfig.TriggerType trigger_type = 20;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      20, this->_internal_trigger_type(), target);
  }

  // optional double start_time = 21 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(21, this->_internal_start_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.AgentConfig)
  return target;
}

size_t AgentConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.AgentConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.simulation.AgentConfig.TrackedPoint tracked_point = 9;
  total_size += 1UL * this->_internal_tracked_point_size();
  for (const auto& msg : this->tracked_point_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string description = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional string start_lane = 15;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_start_lane());
    }

    // optional string end_lane = 16;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_end_lane());
    }

    // optional .apollo.simulation.AgentConfig.TrackedPoint start_position = 12;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_position_);
    }

    // optional .apollo.simulation.AgentConfig.TrackedPoint end_position = 14;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *end_position_);
    }

    // optional int32 id = 1;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_id());
    }

    // optional .apollo.simulation.AgentConfig.Type type = 6;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
    }

    // optional double appear_time = 7 [deprecated = true];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional double disappear_time = 8 [deprecated = true];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 8;
    }

    // optional double distance = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 8;
    }

    // optional double start_distance = 13;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 8;
    }

    // optional .apollo.simulation.AgentConfig.MotionType motiontype = 10;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_motiontype());
    }

    // optional .apollo.simulation.AgentConfig.TriggerType trigger_type = 20;
    if (cached_has_bits & 0x00001000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_trigger_type());
    }

    // optional double start_time = 21 [default = 0];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 8;
    }

    // optional bool avoid_rear_end_collision = 17 [default = true];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 1;
    }

    // optional double width = 3 [default = 2];
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 + 8;
    }

  }
  if (cached_has_bits & 0x00070000u) {
    // optional double length = 4 [default = 5];
    if (cached_has_bits & 0x00010000u) {
      total_size += 1 + 8;
    }

    // optional double height = 5 [default = 1.8];
    if (cached_has_bits & 0x00020000u) {
      total_size += 1 + 8;
    }

    // optional double rear_end_collision_distance = 18 [default = 3, deprecated = true];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AgentConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.AgentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AgentConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AgentConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.AgentConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.AgentConfig)
    MergeFrom(*source);
  }
}

void AgentConfig::MergeFrom(const AgentConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.AgentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tracked_point_.MergeFrom(from.tracked_point_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_start_lane(from._internal_start_lane());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_end_lane(from._internal_end_lane());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_start_position()->::apollo::simulation::AgentConfig_TrackedPoint::MergeFrom(from._internal_start_position());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_end_position()->::apollo::simulation::AgentConfig_TrackedPoint::MergeFrom(from._internal_end_position());
    }
    if (cached_has_bits & 0x00000020u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000080u) {
      appear_time_ = from.appear_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      disappear_time_ = from.disappear_time_;
    }
    if (cached_has_bits & 0x00000200u) {
      distance_ = from.distance_;
    }
    if (cached_has_bits & 0x00000400u) {
      start_distance_ = from.start_distance_;
    }
    if (cached_has_bits & 0x00000800u) {
      motiontype_ = from.motiontype_;
    }
    if (cached_has_bits & 0x00001000u) {
      trigger_type_ = from.trigger_type_;
    }
    if (cached_has_bits & 0x00002000u) {
      start_time_ = from.start_time_;
    }
    if (cached_has_bits & 0x00004000u) {
      avoid_rear_end_collision_ = from.avoid_rear_end_collision_;
    }
    if (cached_has_bits & 0x00008000u) {
      width_ = from.width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00070000u) {
    if (cached_has_bits & 0x00010000u) {
      length_ = from.length_;
    }
    if (cached_has_bits & 0x00020000u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00040000u) {
      rear_end_collision_distance_ = from.rear_end_collision_distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AgentConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.AgentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentConfig::CopyFrom(const AgentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.AgentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentConfig::IsInitialized() const {
  return true;
}

void AgentConfig::InternalSwap(AgentConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  tracked_point_.InternalSwap(&other->tracked_point_);
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  start_lane_.Swap(&other->start_lane_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  end_lane_.Swap(&other->end_lane_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AgentConfig, start_time_)
      + sizeof(AgentConfig::start_time_)
      - PROTOBUF_FIELD_OFFSET(AgentConfig, start_position_)>(
          reinterpret_cast<char*>(&start_position_),
          reinterpret_cast<char*>(&other->start_position_));
  swap(avoid_rear_end_collision_, other->avoid_rear_end_collision_);
  swap(width_, other->width_);
  swap(length_, other->length_);
  swap(height_, other->height_);
  swap(rear_end_collision_distance_, other->rear_end_collision_distance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace simulation
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::simulation::AgentConfig_TrackedPoint* Arena::CreateMaybeMessage< ::apollo::simulation::AgentConfig_TrackedPoint >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::AgentConfig_TrackedPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::AgentConfig* Arena::CreateMaybeMessage< ::apollo::simulation::AgentConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::AgentConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
