// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common_msgs/simulation_msgs/agent.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto;
namespace apollo {
namespace simulation {
class AgentConfig;
class AgentConfigDefaultTypeInternal;
extern AgentConfigDefaultTypeInternal _AgentConfig_default_instance_;
class AgentConfig_TrackedPoint;
class AgentConfig_TrackedPointDefaultTypeInternal;
extern AgentConfig_TrackedPointDefaultTypeInternal _AgentConfig_TrackedPoint_default_instance_;
}  // namespace simulation
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::simulation::AgentConfig* Arena::CreateMaybeMessage<::apollo::simulation::AgentConfig>(Arena*);
template<> ::apollo::simulation::AgentConfig_TrackedPoint* Arena::CreateMaybeMessage<::apollo::simulation::AgentConfig_TrackedPoint>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace simulation {

enum AgentConfig_Type : int {
  AgentConfig_Type_VEHICLE = 0,
  AgentConfig_Type_BICYCLE = 1,
  AgentConfig_Type_PEDESTRIAN = 2,
  AgentConfig_Type_UNKNOWN_UNMOVABLE = 3,
  AgentConfig_Type_UNKNOWN_MOVABLE = 4,
  AgentConfig_Type_BIG_TRUCK = 5
};
bool AgentConfig_Type_IsValid(int value);
constexpr AgentConfig_Type AgentConfig_Type_Type_MIN = AgentConfig_Type_VEHICLE;
constexpr AgentConfig_Type AgentConfig_Type_Type_MAX = AgentConfig_Type_BIG_TRUCK;
constexpr int AgentConfig_Type_Type_ARRAYSIZE = AgentConfig_Type_Type_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentConfig_Type_descriptor();
template<typename T>
inline const std::string& AgentConfig_Type_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgentConfig_Type>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgentConfig_Type_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgentConfig_Type_descriptor(), enum_t_value);
}
inline bool AgentConfig_Type_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AgentConfig_Type* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgentConfig_Type>(
    AgentConfig_Type_descriptor(), name, value);
}
enum AgentConfig_MotionType : int {
  AgentConfig_MotionType_STATIC = 0,
  AgentConfig_MotionType_LANE_FOLLOW = 1,
  AgentConfig_MotionType_TRACKED = 2
};
bool AgentConfig_MotionType_IsValid(int value);
constexpr AgentConfig_MotionType AgentConfig_MotionType_MotionType_MIN = AgentConfig_MotionType_STATIC;
constexpr AgentConfig_MotionType AgentConfig_MotionType_MotionType_MAX = AgentConfig_MotionType_TRACKED;
constexpr int AgentConfig_MotionType_MotionType_ARRAYSIZE = AgentConfig_MotionType_MotionType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentConfig_MotionType_descriptor();
template<typename T>
inline const std::string& AgentConfig_MotionType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgentConfig_MotionType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgentConfig_MotionType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgentConfig_MotionType_descriptor(), enum_t_value);
}
inline bool AgentConfig_MotionType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AgentConfig_MotionType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgentConfig_MotionType>(
    AgentConfig_MotionType_descriptor(), name, value);
}
enum AgentConfig_TriggerType : int {
  AgentConfig_TriggerType_DISTANCE = 0,
  AgentConfig_TriggerType_TIME = 1
};
bool AgentConfig_TriggerType_IsValid(int value);
constexpr AgentConfig_TriggerType AgentConfig_TriggerType_TriggerType_MIN = AgentConfig_TriggerType_DISTANCE;
constexpr AgentConfig_TriggerType AgentConfig_TriggerType_TriggerType_MAX = AgentConfig_TriggerType_TIME;
constexpr int AgentConfig_TriggerType_TriggerType_ARRAYSIZE = AgentConfig_TriggerType_TriggerType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AgentConfig_TriggerType_descriptor();
template<typename T>
inline const std::string& AgentConfig_TriggerType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, AgentConfig_TriggerType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function AgentConfig_TriggerType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    AgentConfig_TriggerType_descriptor(), enum_t_value);
}
inline bool AgentConfig_TriggerType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, AgentConfig_TriggerType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<AgentConfig_TriggerType>(
    AgentConfig_TriggerType_descriptor(), name, value);
}
// ===================================================================

class AgentConfig_TrackedPoint PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.simulation.AgentConfig.TrackedPoint) */ {
 public:
  inline AgentConfig_TrackedPoint() : AgentConfig_TrackedPoint(nullptr) {}
  virtual ~AgentConfig_TrackedPoint();

  AgentConfig_TrackedPoint(const AgentConfig_TrackedPoint& from);
  AgentConfig_TrackedPoint(AgentConfig_TrackedPoint&& from) noexcept
    : AgentConfig_TrackedPoint() {
    *this = ::std::move(from);
  }

  inline AgentConfig_TrackedPoint& operator=(const AgentConfig_TrackedPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentConfig_TrackedPoint& operator=(AgentConfig_TrackedPoint&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgentConfig_TrackedPoint& default_instance();

  static inline const AgentConfig_TrackedPoint* internal_default_instance() {
    return reinterpret_cast<const AgentConfig_TrackedPoint*>(
               &_AgentConfig_TrackedPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AgentConfig_TrackedPoint& a, AgentConfig_TrackedPoint& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentConfig_TrackedPoint* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentConfig_TrackedPoint* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentConfig_TrackedPoint* New() const final {
    return CreateMaybeMessage<AgentConfig_TrackedPoint>(nullptr);
  }

  AgentConfig_TrackedPoint* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentConfig_TrackedPoint>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgentConfig_TrackedPoint& from);
  void MergeFrom(const AgentConfig_TrackedPoint& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentConfig_TrackedPoint* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.simulation.AgentConfig.TrackedPoint";
  }
  protected:
  explicit AgentConfig_TrackedPoint(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto);
    return ::descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kHeadingFieldNumber = 3,
    kSpeedFieldNumber = 4,
    kAccelerationFieldNumber = 5,
  };
  // optional double x = 1;
  bool has_x() const;
  private:
  bool _internal_has_x() const;
  public:
  void clear_x();
  double x() const;
  void set_x(double value);
  private:
  double _internal_x() const;
  void _internal_set_x(double value);
  public:

  // optional double y = 2;
  bool has_y() const;
  private:
  bool _internal_has_y() const;
  public:
  void clear_y();
  double y() const;
  void set_y(double value);
  private:
  double _internal_y() const;
  void _internal_set_y(double value);
  public:

  // optional double heading = 3;
  bool has_heading() const;
  private:
  bool _internal_has_heading() const;
  public:
  void clear_heading();
  double heading() const;
  void set_heading(double value);
  private:
  double _internal_heading() const;
  void _internal_set_heading(double value);
  public:

  // optional double speed = 4;
  bool has_speed() const;
  private:
  bool _internal_has_speed() const;
  public:
  void clear_speed();
  double speed() const;
  void set_speed(double value);
  private:
  double _internal_speed() const;
  void _internal_set_speed(double value);
  public:

  // optional double acceleration = 5;
  bool has_acceleration() const;
  private:
  bool _internal_has_acceleration() const;
  public:
  void clear_acceleration();
  double acceleration() const;
  void set_acceleration(double value);
  private:
  double _internal_acceleration() const;
  void _internal_set_acceleration(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.simulation.AgentConfig.TrackedPoint)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double x_;
  double y_;
  double heading_;
  double speed_;
  double acceleration_;
  friend struct ::TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto;
};
// -------------------------------------------------------------------

class AgentConfig PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.simulation.AgentConfig) */ {
 public:
  inline AgentConfig() : AgentConfig(nullptr) {}
  virtual ~AgentConfig();

  AgentConfig(const AgentConfig& from);
  AgentConfig(AgentConfig&& from) noexcept
    : AgentConfig() {
    *this = ::std::move(from);
  }

  inline AgentConfig& operator=(const AgentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline AgentConfig& operator=(AgentConfig&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AgentConfig& default_instance();

  static inline const AgentConfig* internal_default_instance() {
    return reinterpret_cast<const AgentConfig*>(
               &_AgentConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AgentConfig& a, AgentConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(AgentConfig* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AgentConfig* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AgentConfig* New() const final {
    return CreateMaybeMessage<AgentConfig>(nullptr);
  }

  AgentConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AgentConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AgentConfig& from);
  void MergeFrom(const AgentConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AgentConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.simulation.AgentConfig";
  }
  protected:
  explicit AgentConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto);
    return ::descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef AgentConfig_TrackedPoint TrackedPoint;

  typedef AgentConfig_Type Type;
  static constexpr Type VEHICLE =
    AgentConfig_Type_VEHICLE;
  static constexpr Type BICYCLE =
    AgentConfig_Type_BICYCLE;
  static constexpr Type PEDESTRIAN =
    AgentConfig_Type_PEDESTRIAN;
  static constexpr Type UNKNOWN_UNMOVABLE =
    AgentConfig_Type_UNKNOWN_UNMOVABLE;
  static constexpr Type UNKNOWN_MOVABLE =
    AgentConfig_Type_UNKNOWN_MOVABLE;
  static constexpr Type BIG_TRUCK =
    AgentConfig_Type_BIG_TRUCK;
  static inline bool Type_IsValid(int value) {
    return AgentConfig_Type_IsValid(value);
  }
  static constexpr Type Type_MIN =
    AgentConfig_Type_Type_MIN;
  static constexpr Type Type_MAX =
    AgentConfig_Type_Type_MAX;
  static constexpr int Type_ARRAYSIZE =
    AgentConfig_Type_Type_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Type_descriptor() {
    return AgentConfig_Type_descriptor();
  }
  template<typename T>
  static inline const std::string& Type_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Type>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Type_Name.");
    return AgentConfig_Type_Name(enum_t_value);
  }
  static inline bool Type_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Type* value) {
    return AgentConfig_Type_Parse(name, value);
  }

  typedef AgentConfig_MotionType MotionType;
  static constexpr MotionType STATIC =
    AgentConfig_MotionType_STATIC;
  static constexpr MotionType LANE_FOLLOW =
    AgentConfig_MotionType_LANE_FOLLOW;
  static constexpr MotionType TRACKED =
    AgentConfig_MotionType_TRACKED;
  static inline bool MotionType_IsValid(int value) {
    return AgentConfig_MotionType_IsValid(value);
  }
  static constexpr MotionType MotionType_MIN =
    AgentConfig_MotionType_MotionType_MIN;
  static constexpr MotionType MotionType_MAX =
    AgentConfig_MotionType_MotionType_MAX;
  static constexpr int MotionType_ARRAYSIZE =
    AgentConfig_MotionType_MotionType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  MotionType_descriptor() {
    return AgentConfig_MotionType_descriptor();
  }
  template<typename T>
  static inline const std::string& MotionType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, MotionType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function MotionType_Name.");
    return AgentConfig_MotionType_Name(enum_t_value);
  }
  static inline bool MotionType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      MotionType* value) {
    return AgentConfig_MotionType_Parse(name, value);
  }

  typedef AgentConfig_TriggerType TriggerType;
  static constexpr TriggerType DISTANCE =
    AgentConfig_TriggerType_DISTANCE;
  static constexpr TriggerType TIME =
    AgentConfig_TriggerType_TIME;
  static inline bool TriggerType_IsValid(int value) {
    return AgentConfig_TriggerType_IsValid(value);
  }
  static constexpr TriggerType TriggerType_MIN =
    AgentConfig_TriggerType_TriggerType_MIN;
  static constexpr TriggerType TriggerType_MAX =
    AgentConfig_TriggerType_TriggerType_MAX;
  static constexpr int TriggerType_ARRAYSIZE =
    AgentConfig_TriggerType_TriggerType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  TriggerType_descriptor() {
    return AgentConfig_TriggerType_descriptor();
  }
  template<typename T>
  static inline const std::string& TriggerType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, TriggerType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function TriggerType_Name.");
    return AgentConfig_TriggerType_Name(enum_t_value);
  }
  static inline bool TriggerType_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      TriggerType* value) {
    return AgentConfig_TriggerType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kTrackedPointFieldNumber = 9,
    kDescriptionFieldNumber = 2,
    kStartLaneFieldNumber = 15,
    kEndLaneFieldNumber = 16,
    kStartPositionFieldNumber = 12,
    kEndPositionFieldNumber = 14,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 6,
    kAppearTimeFieldNumber = 7,
    kDisappearTimeFieldNumber = 8,
    kDistanceFieldNumber = 11,
    kStartDistanceFieldNumber = 13,
    kMotiontypeFieldNumber = 10,
    kTriggerTypeFieldNumber = 20,
    kStartTimeFieldNumber = 21,
    kAvoidRearEndCollisionFieldNumber = 17,
    kWidthFieldNumber = 3,
    kLengthFieldNumber = 4,
    kHeightFieldNumber = 5,
    kRearEndCollisionDistanceFieldNumber = 18,
  };
  // repeated .apollo.simulation.AgentConfig.TrackedPoint tracked_point = 9;
  int tracked_point_size() const;
  private:
  int _internal_tracked_point_size() const;
  public:
  void clear_tracked_point();
  ::apollo::simulation::AgentConfig_TrackedPoint* mutable_tracked_point(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::simulation::AgentConfig_TrackedPoint >*
      mutable_tracked_point();
  private:
  const ::apollo::simulation::AgentConfig_TrackedPoint& _internal_tracked_point(int index) const;
  ::apollo::simulation::AgentConfig_TrackedPoint* _internal_add_tracked_point();
  public:
  const ::apollo::simulation::AgentConfig_TrackedPoint& tracked_point(int index) const;
  ::apollo::simulation::AgentConfig_TrackedPoint* add_tracked_point();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::simulation::AgentConfig_TrackedPoint >&
      tracked_point() const;

  // optional string description = 2;
  bool has_description() const;
  private:
  bool _internal_has_description() const;
  public:
  void clear_description();
  const std::string& description() const;
  void set_description(const std::string& value);
  void set_description(std::string&& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  std::string* mutable_description();
  std::string* release_description();
  void set_allocated_description(std::string* description);
  private:
  const std::string& _internal_description() const;
  void _internal_set_description(const std::string& value);
  std::string* _internal_mutable_description();
  public:

  // optional string start_lane = 15;
  bool has_start_lane() const;
  private:
  bool _internal_has_start_lane() const;
  public:
  void clear_start_lane();
  const std::string& start_lane() const;
  void set_start_lane(const std::string& value);
  void set_start_lane(std::string&& value);
  void set_start_lane(const char* value);
  void set_start_lane(const char* value, size_t size);
  std::string* mutable_start_lane();
  std::string* release_start_lane();
  void set_allocated_start_lane(std::string* start_lane);
  private:
  const std::string& _internal_start_lane() const;
  void _internal_set_start_lane(const std::string& value);
  std::string* _internal_mutable_start_lane();
  public:

  // optional string end_lane = 16;
  bool has_end_lane() const;
  private:
  bool _internal_has_end_lane() const;
  public:
  void clear_end_lane();
  const std::string& end_lane() const;
  void set_end_lane(const std::string& value);
  void set_end_lane(std::string&& value);
  void set_end_lane(const char* value);
  void set_end_lane(const char* value, size_t size);
  std::string* mutable_end_lane();
  std::string* release_end_lane();
  void set_allocated_end_lane(std::string* end_lane);
  private:
  const std::string& _internal_end_lane() const;
  void _internal_set_end_lane(const std::string& value);
  std::string* _internal_mutable_end_lane();
  public:

  // optional .apollo.simulation.AgentConfig.TrackedPoint start_position = 12;
  bool has_start_position() const;
  private:
  bool _internal_has_start_position() const;
  public:
  void clear_start_position();
  const ::apollo::simulation::AgentConfig_TrackedPoint& start_position() const;
  ::apollo::simulation::AgentConfig_TrackedPoint* release_start_position();
  ::apollo::simulation::AgentConfig_TrackedPoint* mutable_start_position();
  void set_allocated_start_position(::apollo::simulation::AgentConfig_TrackedPoint* start_position);
  private:
  const ::apollo::simulation::AgentConfig_TrackedPoint& _internal_start_position() const;
  ::apollo::simulation::AgentConfig_TrackedPoint* _internal_mutable_start_position();
  public:
  void unsafe_arena_set_allocated_start_position(
      ::apollo::simulation::AgentConfig_TrackedPoint* start_position);
  ::apollo::simulation::AgentConfig_TrackedPoint* unsafe_arena_release_start_position();

  // optional .apollo.simulation.AgentConfig.TrackedPoint end_position = 14;
  bool has_end_position() const;
  private:
  bool _internal_has_end_position() const;
  public:
  void clear_end_position();
  const ::apollo::simulation::AgentConfig_TrackedPoint& end_position() const;
  ::apollo::simulation::AgentConfig_TrackedPoint* release_end_position();
  ::apollo::simulation::AgentConfig_TrackedPoint* mutable_end_position();
  void set_allocated_end_position(::apollo::simulation::AgentConfig_TrackedPoint* end_position);
  private:
  const ::apollo::simulation::AgentConfig_TrackedPoint& _internal_end_position() const;
  ::apollo::simulation::AgentConfig_TrackedPoint* _internal_mutable_end_position();
  public:
  void unsafe_arena_set_allocated_end_position(
      ::apollo::simulation::AgentConfig_TrackedPoint* end_position);
  ::apollo::simulation::AgentConfig_TrackedPoint* unsafe_arena_release_end_position();

  // optional int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional .apollo.simulation.AgentConfig.Type type = 6;
  bool has_type() const;
  private:
  bool _internal_has_type() const;
  public:
  void clear_type();
  ::apollo::simulation::AgentConfig_Type type() const;
  void set_type(::apollo::simulation::AgentConfig_Type value);
  private:
  ::apollo::simulation::AgentConfig_Type _internal_type() const;
  void _internal_set_type(::apollo::simulation::AgentConfig_Type value);
  public:

  // optional double appear_time = 7 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_appear_time() const;
  private:
  bool _internal_has_appear_time() const;
  public:
  PROTOBUF_DEPRECATED void clear_appear_time();
  PROTOBUF_DEPRECATED double appear_time() const;
  PROTOBUF_DEPRECATED void set_appear_time(double value);
  private:
  double _internal_appear_time() const;
  void _internal_set_appear_time(double value);
  public:

  // optional double disappear_time = 8 [deprecated = true];
  PROTOBUF_DEPRECATED bool has_disappear_time() const;
  private:
  bool _internal_has_disappear_time() const;
  public:
  PROTOBUF_DEPRECATED void clear_disappear_time();
  PROTOBUF_DEPRECATED double disappear_time() const;
  PROTOBUF_DEPRECATED void set_disappear_time(double value);
  private:
  double _internal_disappear_time() const;
  void _internal_set_disappear_time(double value);
  public:

  // optional double distance = 11;
  bool has_distance() const;
  private:
  bool _internal_has_distance() const;
  public:
  void clear_distance();
  double distance() const;
  void set_distance(double value);
  private:
  double _internal_distance() const;
  void _internal_set_distance(double value);
  public:

  // optional double start_distance = 13;
  bool has_start_distance() const;
  private:
  bool _internal_has_start_distance() const;
  public:
  void clear_start_distance();
  double start_distance() const;
  void set_start_distance(double value);
  private:
  double _internal_start_distance() const;
  void _internal_set_start_distance(double value);
  public:

  // optional .apollo.simulation.AgentConfig.MotionType motiontype = 10;
  bool has_motiontype() const;
  private:
  bool _internal_has_motiontype() const;
  public:
  void clear_motiontype();
  ::apollo::simulation::AgentConfig_MotionType motiontype() const;
  void set_motiontype(::apollo::simulation::AgentConfig_MotionType value);
  private:
  ::apollo::simulation::AgentConfig_MotionType _internal_motiontype() const;
  void _internal_set_motiontype(::apollo::simulation::AgentConfig_MotionType value);
  public:

  // optional .apollo.simulation.AgentConfig.TriggerType trigger_type = 20;
  bool has_trigger_type() const;
  private:
  bool _internal_has_trigger_type() const;
  public:
  void clear_trigger_type();
  ::apollo::simulation::AgentConfig_TriggerType trigger_type() const;
  void set_trigger_type(::apollo::simulation::AgentConfig_TriggerType value);
  private:
  ::apollo::simulation::AgentConfig_TriggerType _internal_trigger_type() const;
  void _internal_set_trigger_type(::apollo::simulation::AgentConfig_TriggerType value);
  public:

  // optional double start_time = 21 [default = 0];
  bool has_start_time() const;
  private:
  bool _internal_has_start_time() const;
  public:
  void clear_start_time();
  double start_time() const;
  void set_start_time(double value);
  private:
  double _internal_start_time() const;
  void _internal_set_start_time(double value);
  public:

  // optional bool avoid_rear_end_collision = 17 [default = true];
  bool has_avoid_rear_end_collision() const;
  private:
  bool _internal_has_avoid_rear_end_collision() const;
  public:
  void clear_avoid_rear_end_collision();
  bool avoid_rear_end_collision() const;
  void set_avoid_rear_end_collision(bool value);
  private:
  bool _internal_avoid_rear_end_collision() const;
  void _internal_set_avoid_rear_end_collision(bool value);
  public:

  // optional double width = 3 [default = 2];
  bool has_width() const;
  private:
  bool _internal_has_width() const;
  public:
  void clear_width();
  double width() const;
  void set_width(double value);
  private:
  double _internal_width() const;
  void _internal_set_width(double value);
  public:

  // optional double length = 4 [default = 5];
  bool has_length() const;
  private:
  bool _internal_has_length() const;
  public:
  void clear_length();
  double length() const;
  void set_length(double value);
  private:
  double _internal_length() const;
  void _internal_set_length(double value);
  public:

  // optional double height = 5 [default = 1.8];
  bool has_height() const;
  private:
  bool _internal_has_height() const;
  public:
  void clear_height();
  double height() const;
  void set_height(double value);
  private:
  double _internal_height() const;
  void _internal_set_height(double value);
  public:

  // optional double rear_end_collision_distance = 18 [default = 3, deprecated = true];
  PROTOBUF_DEPRECATED bool has_rear_end_collision_distance() const;
  private:
  bool _internal_has_rear_end_collision_distance() const;
  public:
  PROTOBUF_DEPRECATED void clear_rear_end_collision_distance();
  PROTOBUF_DEPRECATED double rear_end_collision_distance() const;
  PROTOBUF_DEPRECATED void set_rear_end_collision_distance(double value);
  private:
  double _internal_rear_end_collision_distance() const;
  void _internal_set_rear_end_collision_distance(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.simulation.AgentConfig)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::simulation::AgentConfig_TrackedPoint > tracked_point_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr description_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr start_lane_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr end_lane_;
  ::apollo::simulation::AgentConfig_TrackedPoint* start_position_;
  ::apollo::simulation::AgentConfig_TrackedPoint* end_position_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  int type_;
  double appear_time_;
  double disappear_time_;
  double distance_;
  double start_distance_;
  int motiontype_;
  int trigger_type_;
  double start_time_;
  bool avoid_rear_end_collision_;
  double width_;
  double length_;
  double height_;
  double rear_end_collision_distance_;
  friend struct ::TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentConfig_TrackedPoint

// optional double x = 1;
inline bool AgentConfig_TrackedPoint::_internal_has_x() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AgentConfig_TrackedPoint::has_x() const {
  return _internal_has_x();
}
inline void AgentConfig_TrackedPoint::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double AgentConfig_TrackedPoint::_internal_x() const {
  return x_;
}
inline double AgentConfig_TrackedPoint::x() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.TrackedPoint.x)
  return _internal_x();
}
inline void AgentConfig_TrackedPoint::_internal_set_x(double value) {
  _has_bits_[0] |= 0x00000001u;
  x_ = value;
}
inline void AgentConfig_TrackedPoint::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.TrackedPoint.x)
}

// optional double y = 2;
inline bool AgentConfig_TrackedPoint::_internal_has_y() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AgentConfig_TrackedPoint::has_y() const {
  return _internal_has_y();
}
inline void AgentConfig_TrackedPoint::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double AgentConfig_TrackedPoint::_internal_y() const {
  return y_;
}
inline double AgentConfig_TrackedPoint::y() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.TrackedPoint.y)
  return _internal_y();
}
inline void AgentConfig_TrackedPoint::_internal_set_y(double value) {
  _has_bits_[0] |= 0x00000002u;
  y_ = value;
}
inline void AgentConfig_TrackedPoint::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.TrackedPoint.y)
}

// optional double heading = 3;
inline bool AgentConfig_TrackedPoint::_internal_has_heading() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AgentConfig_TrackedPoint::has_heading() const {
  return _internal_has_heading();
}
inline void AgentConfig_TrackedPoint::clear_heading() {
  heading_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double AgentConfig_TrackedPoint::_internal_heading() const {
  return heading_;
}
inline double AgentConfig_TrackedPoint::heading() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.TrackedPoint.heading)
  return _internal_heading();
}
inline void AgentConfig_TrackedPoint::_internal_set_heading(double value) {
  _has_bits_[0] |= 0x00000004u;
  heading_ = value;
}
inline void AgentConfig_TrackedPoint::set_heading(double value) {
  _internal_set_heading(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.TrackedPoint.heading)
}

// optional double speed = 4;
inline bool AgentConfig_TrackedPoint::_internal_has_speed() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool AgentConfig_TrackedPoint::has_speed() const {
  return _internal_has_speed();
}
inline void AgentConfig_TrackedPoint::clear_speed() {
  speed_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double AgentConfig_TrackedPoint::_internal_speed() const {
  return speed_;
}
inline double AgentConfig_TrackedPoint::speed() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.TrackedPoint.speed)
  return _internal_speed();
}
inline void AgentConfig_TrackedPoint::_internal_set_speed(double value) {
  _has_bits_[0] |= 0x00000008u;
  speed_ = value;
}
inline void AgentConfig_TrackedPoint::set_speed(double value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.TrackedPoint.speed)
}

// optional double acceleration = 5;
inline bool AgentConfig_TrackedPoint::_internal_has_acceleration() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool AgentConfig_TrackedPoint::has_acceleration() const {
  return _internal_has_acceleration();
}
inline void AgentConfig_TrackedPoint::clear_acceleration() {
  acceleration_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline double AgentConfig_TrackedPoint::_internal_acceleration() const {
  return acceleration_;
}
inline double AgentConfig_TrackedPoint::acceleration() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.TrackedPoint.acceleration)
  return _internal_acceleration();
}
inline void AgentConfig_TrackedPoint::_internal_set_acceleration(double value) {
  _has_bits_[0] |= 0x00000010u;
  acceleration_ = value;
}
inline void AgentConfig_TrackedPoint::set_acceleration(double value) {
  _internal_set_acceleration(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.TrackedPoint.acceleration)
}

// -------------------------------------------------------------------

// AgentConfig

// optional int32 id = 1;
inline bool AgentConfig::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool AgentConfig::has_id() const {
  return _internal_has_id();
}
inline void AgentConfig::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AgentConfig::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AgentConfig::id() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.id)
  return _internal_id();
}
inline void AgentConfig::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  id_ = value;
}
inline void AgentConfig::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.id)
}

// optional string description = 2;
inline bool AgentConfig::_internal_has_description() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool AgentConfig::has_description() const {
  return _internal_has_description();
}
inline void AgentConfig::clear_description() {
  description_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& AgentConfig::description() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.description)
  return _internal_description();
}
inline void AgentConfig::set_description(const std::string& value) {
  _internal_set_description(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.description)
}
inline std::string* AgentConfig::mutable_description() {
  // @@protoc_insertion_point(field_mutable:apollo.simulation.AgentConfig.description)
  return _internal_mutable_description();
}
inline const std::string& AgentConfig::_internal_description() const {
  return description_.Get();
}
inline void AgentConfig::_internal_set_description(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AgentConfig::set_description(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  description_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:apollo.simulation.AgentConfig.description)
}
inline void AgentConfig::set_description(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:apollo.simulation.AgentConfig.description)
}
inline void AgentConfig::set_description(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000001u;
  description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:apollo.simulation.AgentConfig.description)
}
inline std::string* AgentConfig::_internal_mutable_description() {
  _has_bits_[0] |= 0x00000001u;
  return description_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AgentConfig::release_description() {
  // @@protoc_insertion_point(field_release:apollo.simulation.AgentConfig.description)
  if (!_internal_has_description()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return description_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AgentConfig::set_allocated_description(std::string* description) {
  if (description != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  description_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), description,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:apollo.simulation.AgentConfig.description)
}

// optional double width = 3 [default = 2];
inline bool AgentConfig::_internal_has_width() const {
  bool value = (_has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline bool AgentConfig::has_width() const {
  return _internal_has_width();
}
inline void AgentConfig::clear_width() {
  width_ = 2;
  _has_bits_[0] &= ~0x00008000u;
}
inline double AgentConfig::_internal_width() const {
  return width_;
}
inline double AgentConfig::width() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.width)
  return _internal_width();
}
inline void AgentConfig::_internal_set_width(double value) {
  _has_bits_[0] |= 0x00008000u;
  width_ = value;
}
inline void AgentConfig::set_width(double value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.width)
}

// optional double length = 4 [default = 5];
inline bool AgentConfig::_internal_has_length() const {
  bool value = (_has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline bool AgentConfig::has_length() const {
  return _internal_has_length();
}
inline void AgentConfig::clear_length() {
  length_ = 5;
  _has_bits_[0] &= ~0x00010000u;
}
inline double AgentConfig::_internal_length() const {
  return length_;
}
inline double AgentConfig::length() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.length)
  return _internal_length();
}
inline void AgentConfig::_internal_set_length(double value) {
  _has_bits_[0] |= 0x00010000u;
  length_ = value;
}
inline void AgentConfig::set_length(double value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.length)
}

// optional double height = 5 [default = 1.8];
inline bool AgentConfig::_internal_has_height() const {
  bool value = (_has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline bool AgentConfig::has_height() const {
  return _internal_has_height();
}
inline void AgentConfig::clear_height() {
  height_ = 1.8;
  _has_bits_[0] &= ~0x00020000u;
}
inline double AgentConfig::_internal_height() const {
  return height_;
}
inline double AgentConfig::height() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.height)
  return _internal_height();
}
inline void AgentConfig::_internal_set_height(double value) {
  _has_bits_[0] |= 0x00020000u;
  height_ = value;
}
inline void AgentConfig::set_height(double value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.height)
}

// optional .apollo.simulation.AgentConfig.Type type = 6;
inline bool AgentConfig::_internal_has_type() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool AgentConfig::has_type() const {
  return _internal_has_type();
}
inline void AgentConfig::clear_type() {
  type_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::apollo::simulation::AgentConfig_Type AgentConfig::_internal_type() const {
  return static_cast< ::apollo::simulation::AgentConfig_Type >(type_);
}
inline ::apollo::simulation::AgentConfig_Type AgentConfig::type() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.type)
  return _internal_type();
}
inline void AgentConfig::_internal_set_type(::apollo::simulation::AgentConfig_Type value) {
  assert(::apollo::simulation::AgentConfig_Type_IsValid(value));
  _has_bits_[0] |= 0x00000040u;
  type_ = value;
}
inline void AgentConfig::set_type(::apollo::simulation::AgentConfig_Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.type)
}

// optional double appear_time = 7 [deprecated = true];
inline bool AgentConfig::_internal_has_appear_time() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool AgentConfig::has_appear_time() const {
  return _internal_has_appear_time();
}
inline void AgentConfig::clear_appear_time() {
  appear_time_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double AgentConfig::_internal_appear_time() const {
  return appear_time_;
}
inline double AgentConfig::appear_time() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.appear_time)
  return _internal_appear_time();
}
inline void AgentConfig::_internal_set_appear_time(double value) {
  _has_bits_[0] |= 0x00000080u;
  appear_time_ = value;
}
inline void AgentConfig::set_appear_time(double value) {
  _internal_set_appear_time(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.appear_time)
}

// optional double disappear_time = 8 [deprecated = true];
inline bool AgentConfig::_internal_has_disappear_time() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool AgentConfig::has_disappear_time() const {
  return _internal_has_disappear_time();
}
inline void AgentConfig::clear_disappear_time() {
  disappear_time_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double AgentConfig::_internal_disappear_time() const {
  return disappear_time_;
}
inline double AgentConfig::disappear_time() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.disappear_time)
  return _internal_disappear_time();
}
inline void AgentConfig::_internal_set_disappear_time(double value) {
  _has_bits_[0] |= 0x00000100u;
  disappear_time_ = value;
}
inline void AgentConfig::set_disappear_time(double value) {
  _internal_set_disappear_time(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.disappear_time)
}

// repeated .apollo.simulation.AgentConfig.TrackedPoint tracked_point = 9;
inline int AgentConfig::_internal_tracked_point_size() const {
  return tracked_point_.size();
}
inline int AgentConfig::tracked_point_size() const {
  return _internal_tracked_point_size();
}
inline void AgentConfig::clear_tracked_point() {
  tracked_point_.Clear();
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::mutable_tracked_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.simulation.AgentConfig.tracked_point)
  return tracked_point_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::simulation::AgentConfig_TrackedPoint >*
AgentConfig::mutable_tracked_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.simulation.AgentConfig.tracked_point)
  return &tracked_point_;
}
inline const ::apollo::simulation::AgentConfig_TrackedPoint& AgentConfig::_internal_tracked_point(int index) const {
  return tracked_point_.Get(index);
}
inline const ::apollo::simulation::AgentConfig_TrackedPoint& AgentConfig::tracked_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.tracked_point)
  return _internal_tracked_point(index);
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::_internal_add_tracked_point() {
  return tracked_point_.Add();
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::add_tracked_point() {
  // @@protoc_insertion_point(field_add:apollo.simulation.AgentConfig.tracked_point)
  return _internal_add_tracked_point();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::simulation::AgentConfig_TrackedPoint >&
AgentConfig::tracked_point() const {
  // @@protoc_insertion_point(field_list:apollo.simulation.AgentConfig.tracked_point)
  return tracked_point_;
}

// optional .apollo.simulation.AgentConfig.MotionType motiontype = 10;
inline bool AgentConfig::_internal_has_motiontype() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline bool AgentConfig::has_motiontype() const {
  return _internal_has_motiontype();
}
inline void AgentConfig::clear_motiontype() {
  motiontype_ = 0;
  _has_bits_[0] &= ~0x00000800u;
}
inline ::apollo::simulation::AgentConfig_MotionType AgentConfig::_internal_motiontype() const {
  return static_cast< ::apollo::simulation::AgentConfig_MotionType >(motiontype_);
}
inline ::apollo::simulation::AgentConfig_MotionType AgentConfig::motiontype() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.motiontype)
  return _internal_motiontype();
}
inline void AgentConfig::_internal_set_motiontype(::apollo::simulation::AgentConfig_MotionType value) {
  assert(::apollo::simulation::AgentConfig_MotionType_IsValid(value));
  _has_bits_[0] |= 0x00000800u;
  motiontype_ = value;
}
inline void AgentConfig::set_motiontype(::apollo::simulation::AgentConfig_MotionType value) {
  _internal_set_motiontype(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.motiontype)
}

// optional double distance = 11;
inline bool AgentConfig::_internal_has_distance() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool AgentConfig::has_distance() const {
  return _internal_has_distance();
}
inline void AgentConfig::clear_distance() {
  distance_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline double AgentConfig::_internal_distance() const {
  return distance_;
}
inline double AgentConfig::distance() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.distance)
  return _internal_distance();
}
inline void AgentConfig::_internal_set_distance(double value) {
  _has_bits_[0] |= 0x00000200u;
  distance_ = value;
}
inline void AgentConfig::set_distance(double value) {
  _internal_set_distance(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.distance)
}

// optional .apollo.simulation.AgentConfig.TrackedPoint start_position = 12;
inline bool AgentConfig::_internal_has_start_position() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || start_position_ != nullptr);
  return value;
}
inline bool AgentConfig::has_start_position() const {
  return _internal_has_start_position();
}
inline void AgentConfig::clear_start_position() {
  if (start_position_ != nullptr) start_position_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::apollo::simulation::AgentConfig_TrackedPoint& AgentConfig::_internal_start_position() const {
  const ::apollo::simulation::AgentConfig_TrackedPoint* p = start_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::simulation::AgentConfig_TrackedPoint&>(
      ::apollo::simulation::_AgentConfig_TrackedPoint_default_instance_);
}
inline const ::apollo::simulation::AgentConfig_TrackedPoint& AgentConfig::start_position() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.start_position)
  return _internal_start_position();
}
inline void AgentConfig::unsafe_arena_set_allocated_start_position(
    ::apollo::simulation::AgentConfig_TrackedPoint* start_position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(start_position_);
  }
  start_position_ = start_position;
  if (start_position) {
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.simulation.AgentConfig.start_position)
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::release_start_position() {
  _has_bits_[0] &= ~0x00000008u;
  ::apollo::simulation::AgentConfig_TrackedPoint* temp = start_position_;
  start_position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::unsafe_arena_release_start_position() {
  // @@protoc_insertion_point(field_release:apollo.simulation.AgentConfig.start_position)
  _has_bits_[0] &= ~0x00000008u;
  ::apollo::simulation::AgentConfig_TrackedPoint* temp = start_position_;
  start_position_ = nullptr;
  return temp;
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::_internal_mutable_start_position() {
  _has_bits_[0] |= 0x00000008u;
  if (start_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::simulation::AgentConfig_TrackedPoint>(GetArena());
    start_position_ = p;
  }
  return start_position_;
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::mutable_start_position() {
  // @@protoc_insertion_point(field_mutable:apollo.simulation.AgentConfig.start_position)
  return _internal_mutable_start_position();
}
inline void AgentConfig::set_allocated_start_position(::apollo::simulation::AgentConfig_TrackedPoint* start_position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete start_position_;
  }
  if (start_position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(start_position);
    if (message_arena != submessage_arena) {
      start_position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, start_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  start_position_ = start_position;
  // @@protoc_insertion_point(field_set_allocated:apollo.simulation.AgentConfig.start_position)
}

// optional .apollo.simulation.AgentConfig.TrackedPoint end_position = 14;
inline bool AgentConfig::_internal_has_end_position() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || end_position_ != nullptr);
  return value;
}
inline bool AgentConfig::has_end_position() const {
  return _internal_has_end_position();
}
inline void AgentConfig::clear_end_position() {
  if (end_position_ != nullptr) end_position_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::apollo::simulation::AgentConfig_TrackedPoint& AgentConfig::_internal_end_position() const {
  const ::apollo::simulation::AgentConfig_TrackedPoint* p = end_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::apollo::simulation::AgentConfig_TrackedPoint&>(
      ::apollo::simulation::_AgentConfig_TrackedPoint_default_instance_);
}
inline const ::apollo::simulation::AgentConfig_TrackedPoint& AgentConfig::end_position() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.end_position)
  return _internal_end_position();
}
inline void AgentConfig::unsafe_arena_set_allocated_end_position(
    ::apollo::simulation::AgentConfig_TrackedPoint* end_position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(end_position_);
  }
  end_position_ = end_position;
  if (end_position) {
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:apollo.simulation.AgentConfig.end_position)
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::release_end_position() {
  _has_bits_[0] &= ~0x00000010u;
  ::apollo::simulation::AgentConfig_TrackedPoint* temp = end_position_;
  end_position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::unsafe_arena_release_end_position() {
  // @@protoc_insertion_point(field_release:apollo.simulation.AgentConfig.end_position)
  _has_bits_[0] &= ~0x00000010u;
  ::apollo::simulation::AgentConfig_TrackedPoint* temp = end_position_;
  end_position_ = nullptr;
  return temp;
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::_internal_mutable_end_position() {
  _has_bits_[0] |= 0x00000010u;
  if (end_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::simulation::AgentConfig_TrackedPoint>(GetArena());
    end_position_ = p;
  }
  return end_position_;
}
inline ::apollo::simulation::AgentConfig_TrackedPoint* AgentConfig::mutable_end_position() {
  // @@protoc_insertion_point(field_mutable:apollo.simulation.AgentConfig.end_position)
  return _internal_mutable_end_position();
}
inline void AgentConfig::set_allocated_end_position(::apollo::simulation::AgentConfig_TrackedPoint* end_position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete end_position_;
  }
  if (end_position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(end_position);
    if (message_arena != submessage_arena) {
      end_position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, end_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  end_position_ = end_position;
  // @@protoc_insertion_point(field_set_allocated:apollo.simulation.AgentConfig.end_position)
}

// optional string start_lane = 15;
inline bool AgentConfig::_internal_has_start_lane() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool AgentConfig::has_start_lane() const {
  return _internal_has_start_lane();
}
inline void AgentConfig::clear_start_lane() {
  start_lane_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& AgentConfig::start_lane() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.start_lane)
  return _internal_start_lane();
}
inline void AgentConfig::set_start_lane(const std::string& value) {
  _internal_set_start_lane(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.start_lane)
}
inline std::string* AgentConfig::mutable_start_lane() {
  // @@protoc_insertion_point(field_mutable:apollo.simulation.AgentConfig.start_lane)
  return _internal_mutable_start_lane();
}
inline const std::string& AgentConfig::_internal_start_lane() const {
  return start_lane_.Get();
}
inline void AgentConfig::_internal_set_start_lane(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  start_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AgentConfig::set_start_lane(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  start_lane_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:apollo.simulation.AgentConfig.start_lane)
}
inline void AgentConfig::set_start_lane(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  start_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:apollo.simulation.AgentConfig.start_lane)
}
inline void AgentConfig::set_start_lane(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000002u;
  start_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:apollo.simulation.AgentConfig.start_lane)
}
inline std::string* AgentConfig::_internal_mutable_start_lane() {
  _has_bits_[0] |= 0x00000002u;
  return start_lane_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AgentConfig::release_start_lane() {
  // @@protoc_insertion_point(field_release:apollo.simulation.AgentConfig.start_lane)
  if (!_internal_has_start_lane()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return start_lane_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AgentConfig::set_allocated_start_lane(std::string* start_lane) {
  if (start_lane != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  start_lane_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), start_lane,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:apollo.simulation.AgentConfig.start_lane)
}

// optional string end_lane = 16;
inline bool AgentConfig::_internal_has_end_lane() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool AgentConfig::has_end_lane() const {
  return _internal_has_end_lane();
}
inline void AgentConfig::clear_end_lane() {
  end_lane_.ClearToEmpty();
  _has_bits_[0] &= ~0x00000004u;
}
inline const std::string& AgentConfig::end_lane() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.end_lane)
  return _internal_end_lane();
}
inline void AgentConfig::set_end_lane(const std::string& value) {
  _internal_set_end_lane(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.end_lane)
}
inline std::string* AgentConfig::mutable_end_lane() {
  // @@protoc_insertion_point(field_mutable:apollo.simulation.AgentConfig.end_lane)
  return _internal_mutable_end_lane();
}
inline const std::string& AgentConfig::_internal_end_lane() const {
  return end_lane_.Get();
}
inline void AgentConfig::_internal_set_end_lane(const std::string& value) {
  _has_bits_[0] |= 0x00000004u;
  end_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AgentConfig::set_end_lane(std::string&& value) {
  _has_bits_[0] |= 0x00000004u;
  end_lane_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:apollo.simulation.AgentConfig.end_lane)
}
inline void AgentConfig::set_end_lane(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000004u;
  end_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:apollo.simulation.AgentConfig.end_lane)
}
inline void AgentConfig::set_end_lane(const char* value,
    size_t size) {
  _has_bits_[0] |= 0x00000004u;
  end_lane_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:apollo.simulation.AgentConfig.end_lane)
}
inline std::string* AgentConfig::_internal_mutable_end_lane() {
  _has_bits_[0] |= 0x00000004u;
  return end_lane_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AgentConfig::release_end_lane() {
  // @@protoc_insertion_point(field_release:apollo.simulation.AgentConfig.end_lane)
  if (!_internal_has_end_lane()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000004u;
  return end_lane_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AgentConfig::set_allocated_end_lane(std::string* end_lane) {
  if (end_lane != nullptr) {
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  end_lane_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), end_lane,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:apollo.simulation.AgentConfig.end_lane)
}

// optional .apollo.simulation.AgentConfig.TriggerType trigger_type = 20;
inline bool AgentConfig::_internal_has_trigger_type() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool AgentConfig::has_trigger_type() const {
  return _internal_has_trigger_type();
}
inline void AgentConfig::clear_trigger_type() {
  trigger_type_ = 0;
  _has_bits_[0] &= ~0x00001000u;
}
inline ::apollo::simulation::AgentConfig_TriggerType AgentConfig::_internal_trigger_type() const {
  return static_cast< ::apollo::simulation::AgentConfig_TriggerType >(trigger_type_);
}
inline ::apollo::simulation::AgentConfig_TriggerType AgentConfig::trigger_type() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.trigger_type)
  return _internal_trigger_type();
}
inline void AgentConfig::_internal_set_trigger_type(::apollo::simulation::AgentConfig_TriggerType value) {
  assert(::apollo::simulation::AgentConfig_TriggerType_IsValid(value));
  _has_bits_[0] |= 0x00001000u;
  trigger_type_ = value;
}
inline void AgentConfig::set_trigger_type(::apollo::simulation::AgentConfig_TriggerType value) {
  _internal_set_trigger_type(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.trigger_type)
}

// optional double start_distance = 13;
inline bool AgentConfig::_internal_has_start_distance() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline bool AgentConfig::has_start_distance() const {
  return _internal_has_start_distance();
}
inline void AgentConfig::clear_start_distance() {
  start_distance_ = 0;
  _has_bits_[0] &= ~0x00000400u;
}
inline double AgentConfig::_internal_start_distance() const {
  return start_distance_;
}
inline double AgentConfig::start_distance() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.start_distance)
  return _internal_start_distance();
}
inline void AgentConfig::_internal_set_start_distance(double value) {
  _has_bits_[0] |= 0x00000400u;
  start_distance_ = value;
}
inline void AgentConfig::set_start_distance(double value) {
  _internal_set_start_distance(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.start_distance)
}

// optional double start_time = 21 [default = 0];
inline bool AgentConfig::_internal_has_start_time() const {
  bool value = (_has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline bool AgentConfig::has_start_time() const {
  return _internal_has_start_time();
}
inline void AgentConfig::clear_start_time() {
  start_time_ = 0;
  _has_bits_[0] &= ~0x00002000u;
}
inline double AgentConfig::_internal_start_time() const {
  return start_time_;
}
inline double AgentConfig::start_time() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.start_time)
  return _internal_start_time();
}
inline void AgentConfig::_internal_set_start_time(double value) {
  _has_bits_[0] |= 0x00002000u;
  start_time_ = value;
}
inline void AgentConfig::set_start_time(double value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.start_time)
}

// optional bool avoid_rear_end_collision = 17 [default = true];
inline bool AgentConfig::_internal_has_avoid_rear_end_collision() const {
  bool value = (_has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline bool AgentConfig::has_avoid_rear_end_collision() const {
  return _internal_has_avoid_rear_end_collision();
}
inline void AgentConfig::clear_avoid_rear_end_collision() {
  avoid_rear_end_collision_ = true;
  _has_bits_[0] &= ~0x00004000u;
}
inline bool AgentConfig::_internal_avoid_rear_end_collision() const {
  return avoid_rear_end_collision_;
}
inline bool AgentConfig::avoid_rear_end_collision() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.avoid_rear_end_collision)
  return _internal_avoid_rear_end_collision();
}
inline void AgentConfig::_internal_set_avoid_rear_end_collision(bool value) {
  _has_bits_[0] |= 0x00004000u;
  avoid_rear_end_collision_ = value;
}
inline void AgentConfig::set_avoid_rear_end_collision(bool value) {
  _internal_set_avoid_rear_end_collision(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.avoid_rear_end_collision)
}

// optional double rear_end_collision_distance = 18 [default = 3, deprecated = true];
inline bool AgentConfig::_internal_has_rear_end_collision_distance() const {
  bool value = (_has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline bool AgentConfig::has_rear_end_collision_distance() const {
  return _internal_has_rear_end_collision_distance();
}
inline void AgentConfig::clear_rear_end_collision_distance() {
  rear_end_collision_distance_ = 3;
  _has_bits_[0] &= ~0x00040000u;
}
inline double AgentConfig::_internal_rear_end_collision_distance() const {
  return rear_end_collision_distance_;
}
inline double AgentConfig::rear_end_collision_distance() const {
  // @@protoc_insertion_point(field_get:apollo.simulation.AgentConfig.rear_end_collision_distance)
  return _internal_rear_end_collision_distance();
}
inline void AgentConfig::_internal_set_rear_end_collision_distance(double value) {
  _has_bits_[0] |= 0x00040000u;
  rear_end_collision_distance_ = value;
}
inline void AgentConfig::set_rear_end_collision_distance(double value) {
  _internal_set_rear_end_collision_distance(value);
  // @@protoc_insertion_point(field_set:apollo.simulation.AgentConfig.rear_end_collision_distance)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace simulation
}  // namespace apollo

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::apollo::simulation::AgentConfig_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::simulation::AgentConfig_Type>() {
  return ::apollo::simulation::AgentConfig_Type_descriptor();
}
template <> struct is_proto_enum< ::apollo::simulation::AgentConfig_MotionType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::simulation::AgentConfig_MotionType>() {
  return ::apollo::simulation::AgentConfig_MotionType_descriptor();
}
template <> struct is_proto_enum< ::apollo::simulation::AgentConfig_TriggerType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::simulation::AgentConfig_TriggerType>() {
  return ::apollo::simulation::AgentConfig_TriggerType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto
