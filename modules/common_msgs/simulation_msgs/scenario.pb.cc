// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common_msgs/simulation_msgs/scenario.proto

#include "modules/common_msgs/simulation_msgs/scenario.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2frouting_2fproto_2frouting_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_RoutingRequest_modules_2frouting_2fproto_2frouting_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fgrading_5fmetric_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GradingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fgrading_5fmetric_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto;
namespace apollo {
namespace simulation {
class FuzzingConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FuzzingConfig> _instance;
} _FuzzingConfig_default_instance_;
class DriveActionConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DriveActionConfig> _instance;
} _DriveActionConfig_default_instance_;
class Scenario_PointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scenario_Point> _instance;
} _Scenario_Point_default_instance_;
class Scenario_TL_LocationDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scenario_TL_Location> _instance;
} _Scenario_TL_Location_default_instance_;
class Scenario_TL_StateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scenario_TL_State> _instance;
} _Scenario_TL_State_default_instance_;
class Scenario_TLDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scenario_TL> _instance;
} _Scenario_TL_default_instance_;
class ScenarioDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Scenario> _instance;
} _Scenario_default_instance_;
}  // namespace simulation
}  // namespace apollo
static void InitDefaultsscc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_DriveActionConfig_default_instance_;
    new (ptr) ::apollo::simulation::DriveActionConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {}};

static void InitDefaultsscc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_FuzzingConfig_default_instance_;
    new (ptr) ::apollo::simulation::FuzzingConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {}};

static void InitDefaultsscc_info_Scenario_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_Scenario_default_instance_;
    new (ptr) ::apollo::simulation::Scenario();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<7> scc_info_Scenario_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 7, 0, InitDefaultsscc_info_Scenario_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {
      &scc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
      &scc_info_RoutingRequest_modules_2frouting_2fproto_2frouting_2eproto.base,
      &scc_info_GradingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fgrading_5fmetric_2eproto.base,
      &scc_info_AgentConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto.base,
      &scc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
      &scc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
      &scc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,}};

static void InitDefaultsscc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_Scenario_Point_default_instance_;
    new (ptr) ::apollo::simulation::Scenario_Point();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {}};

static void InitDefaultsscc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_Scenario_TL_default_instance_;
    new (ptr) ::apollo::simulation::Scenario_TL();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {
      &scc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
      &scc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,}};

static void InitDefaultsscc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_Scenario_TL_Location_default_instance_;
    new (ptr) ::apollo::simulation::Scenario_TL_Location();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {}};

static void InitDefaultsscc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::simulation::_Scenario_TL_State_default_instance_;
    new (ptr) ::apollo::simulation::Scenario_TL_State();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::FuzzingConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::DriveActionConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::DriveActionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::DriveActionConfig, drive_action_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::DriveActionConfig, trigger_time_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_Point, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_Point, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_Point, x_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_Point, y_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_Point, heading_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_Location, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_Location, x_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_Location, y_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_Location, z_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_State, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_State, color_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_State, blink_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL_State, keep_time_),
  1,
  0,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, id_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, location_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, trigger_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, trigger_value_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, initial_state_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario_TL, state_group_),
  0,
  1,
  3,
  4,
  2,
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, name_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, description_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, start_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, end_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, parking_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, origin_log_file_path_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, log_file_start_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, log_file_end_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, routing_request_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, map_dir_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, grade_config_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, agent_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, drive_action_config_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, fuzzing_config_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, simulator_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, start_velocity_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, start_acceleration_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, base_grade_config_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, detect_distance_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, default_light_behavior_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, red_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, green_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, yellow_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, traffic_lights_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, mode_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, select_default_metric_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, deselect_default_metric_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, backtrack_time_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, vehicle_),
  PROTOBUF_FIELD_OFFSET(::apollo::simulation::Scenario, traffic_flow_),
  0,
  1,
  5,
  6,
  7,
  ~0u,
  11,
  12,
  8,
  2,
  9,
  ~0u,
  ~0u,
  10,
  15,
  13,
  14,
  3,
  19,
  16,
  20,
  21,
  22,
  ~0u,
  17,
  ~0u,
  ~0u,
  23,
  4,
  18,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apollo::simulation::FuzzingConfig)},
  { 5, 12, sizeof(::apollo::simulation::DriveActionConfig)},
  { 14, 22, sizeof(::apollo::simulation::Scenario_Point)},
  { 25, 33, sizeof(::apollo::simulation::Scenario_TL_Location)},
  { 36, 44, sizeof(::apollo::simulation::Scenario_TL_State)},
  { 47, 58, sizeof(::apollo::simulation::Scenario_TL)},
  { 64, 99, sizeof(::apollo::simulation::Scenario)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_FuzzingConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_DriveActionConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_Scenario_Point_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_Scenario_TL_Location_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_Scenario_TL_State_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_Scenario_TL_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::simulation::_Scenario_default_instance_),
};

const char descriptor_table_protodef_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2modules/common_msgs/simulation_msgs/sc"
  "enario.proto\022\021apollo.simulation\032/modules"
  "/common_msgs/simulation_msgs/agent.proto"
  "\0328modules/common_msgs/simulation_msgs/gr"
  "ading_metric.proto\0326modules/perception/p"
  "roto/traffic_light_detection.proto\032$modu"
  "les/planning/proto/pad_msg.proto\032#module"
  "s/routing/proto/routing.proto\"\017\n\rFuzzing"
  "Config\"h\n\021DriveActionConfig\022:\n\014drive_act"
  "ion\030\001 \001(\0162\036.apollo.planning.DrivingActio"
  "n:\004NONE\022\027\n\014trigger_time\030\002 \001(\001:\0010\"\251\016\n\010Sce"
  "nario\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t"
  "\0220\n\005start\030\003 \001(\0132!.apollo.simulation.Scen"
  "ario.Point\022.\n\003end\030\004 \001(\0132!.apollo.simulat"
  "ion.Scenario.Point\0228\n\rparking_point\030\005 \001("
  "\0132!.apollo.simulation.Scenario.Point\022\034\n\024"
  "origin_log_file_path\030\006 \003(\t\022\033\n\023log_file_s"
  "tart_time\030\007 \001(\001\022\031\n\021log_file_end_time\030\010 \001"
  "(\001\0227\n\017routing_request\030\t \001(\0132\036.apollo.rou"
  "ting.RoutingRequest\022\017\n\007map_dir\030\n \001(\t\0226\n\014"
  "grade_config\030\013 \001(\0132 .apollo.simulation.G"
  "radingConfig\022-\n\005agent\030\014 \003(\0132\036.apollo.sim"
  "ulation.AgentConfig\022A\n\023drive_action_conf"
  "ig\030\r \003(\0132$.apollo.simulation.DriveAction"
  "Config\0228\n\016fuzzing_config\030\016 \001(\0132 .apollo."
  "simulation.FuzzingConfig\022\026\n\016simulator_ti"
  "me\030\017 \001(\005\022\031\n\016start_velocity\030\020 \001(\001:\0010\022\035\n\022s"
  "tart_acceleration\030\021 \001(\001:\0010\022\036\n\026base_grade"
  "_config_file\030\022 \001(\t\022\034\n\017detect_distance\030\023 "
  "\001(\001:\003120\022^\n\026default_light_behavior\030\024 \001(\016"
  "20.apollo.simulation.Scenario.DefaultLig"
  "htBehavior:\014ALWAYS_GREEN\022\024\n\010red_time\030\025 \001"
  "(\001:\00215\022\026\n\ngreen_time\030\026 \001(\001:\00213\022\026\n\013yellow"
  "_time\030\027 \001(\001:\0013\0226\n\016traffic_lights\030\030 \003(\0132\036"
  ".apollo.simulation.Scenario.TL\0228\n\004mode\030\031"
  " \001(\0162 .apollo.simulation.Scenario.Mode:\010"
  "WORLDSIM\022\035\n\025select_default_metric\030\032 \003(\t\022"
  "\037\n\027deselect_default_metric\030\033 \003(\t\022\031\n\016back"
  "track_time\030\034 \001(\001:\0011\022\017\n\007vehicle\030\035 \001(\t\022\033\n\014"
  "traffic_flow\030\036 \001(\010:\005false\032.\n\005Point\022\t\n\001x\030"
  "\001 \001(\001\022\t\n\001y\030\002 \001(\001\022\017\n\007heading\030\003 \001(\001\032\363\003\n\002TL"
  "\022\n\n\002id\030\001 \001(\t\0229\n\010location\030\002 \001(\0132\'.apollo."
  "simulation.Scenario.TL.Location\022D\n\014trigg"
  "er_type\030\003 \001(\0162*.apollo.simulation.Scenar"
  "io.TL.TriggerType:\002NA\022\031\n\rtrigger_value\030\004"
  " \001(\001:\00230\022;\n\rinitial_state\030\005 \001(\0132$.apollo"
  ".simulation.Scenario.TL.State\0229\n\013state_g"
  "roup\030\006 \003(\0132$.apollo.simulation.Scenario."
  "TL.State\032+\n\010Location\022\t\n\001x\030\001 \001(\001\022\t\n\001y\030\002 \001"
  "(\001\022\t\n\001z\030\003 \001(\001\032q\n\005State\022;\n\005color\030\001 \001(\0162%."
  "apollo.perception.TrafficLight.Color:\005GR"
  "EEN\022\024\n\005blink\030\002 \001(\010:\005false\022\025\n\tkeep_time\030\003"
  " \001(\001:\00210\"-\n\013TriggerType\022\006\n\002NA\020\000\022\014\n\010DISTA"
  "NCE\020\001\022\010\n\004TIME\020\002\"6\n\024DefaultLightBehavior\022"
  "\020\n\014ALWAYS_GREEN\020\000\022\014\n\010CYCLICAL\020\001\"K\n\004Mode\022"
  "\014\n\010WORLDSIM\020\000\022\n\n\006LOGSIM\020\001\022\022\n\016LOGSIM_CONT"
  "ROL\020\002\022\025\n\021LOGSIM_PERCEPTION\020\003"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto_deps[5] = {
  &::descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fagent_2eproto,
  &::descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fgrading_5fmetric_2eproto,
  &::descriptor_table_modules_2fperception_2fproto_2ftraffic_5flight_5fdetection_2eproto,
  &::descriptor_table_modules_2fplanning_2fproto_2fpad_5fmsg_2eproto,
  &::descriptor_table_modules_2frouting_2fproto_2frouting_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto_sccs[7] = {
  &scc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
  &scc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
  &scc_info_Scenario_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
  &scc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
  &scc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
  &scc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
  &scc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto = {
  false, false, descriptor_table_protodef_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto, "modules/common_msgs/simulation_msgs/scenario.proto", 2268,
  &descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto_once, descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto_sccs, descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto_deps, 7, 5,
  schemas, file_default_instances, TableStruct_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto::offsets,
  file_level_metadata_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto, 7, file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto, file_level_service_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto)), true);
namespace apollo {
namespace simulation {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scenario_TL_TriggerType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto[0];
}
bool Scenario_TL_TriggerType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scenario_TL_TriggerType Scenario_TL::NA;
constexpr Scenario_TL_TriggerType Scenario_TL::DISTANCE;
constexpr Scenario_TL_TriggerType Scenario_TL::TIME;
constexpr Scenario_TL_TriggerType Scenario_TL::TriggerType_MIN;
constexpr Scenario_TL_TriggerType Scenario_TL::TriggerType_MAX;
constexpr int Scenario_TL::TriggerType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scenario_DefaultLightBehavior_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto[1];
}
bool Scenario_DefaultLightBehavior_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scenario_DefaultLightBehavior Scenario::ALWAYS_GREEN;
constexpr Scenario_DefaultLightBehavior Scenario::CYCLICAL;
constexpr Scenario_DefaultLightBehavior Scenario::DefaultLightBehavior_MIN;
constexpr Scenario_DefaultLightBehavior Scenario::DefaultLightBehavior_MAX;
constexpr int Scenario::DefaultLightBehavior_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Scenario_Mode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto[2];
}
bool Scenario_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Scenario_Mode Scenario::WORLDSIM;
constexpr Scenario_Mode Scenario::LOGSIM;
constexpr Scenario_Mode Scenario::LOGSIM_CONTROL;
constexpr Scenario_Mode Scenario::LOGSIM_PERCEPTION;
constexpr Scenario_Mode Scenario::Mode_MIN;
constexpr Scenario_Mode Scenario::Mode_MAX;
constexpr int Scenario::Mode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class FuzzingConfig::_Internal {
 public:
};

FuzzingConfig::FuzzingConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.FuzzingConfig)
}
FuzzingConfig::FuzzingConfig(const FuzzingConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.FuzzingConfig)
}

void FuzzingConfig::SharedCtor() {
}

FuzzingConfig::~FuzzingConfig() {
  // @@protoc_insertion_point(destructor:apollo.simulation.FuzzingConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FuzzingConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FuzzingConfig::ArenaDtor(void* object) {
  FuzzingConfig* _this = reinterpret_cast< FuzzingConfig* >(object);
  (void)_this;
}
void FuzzingConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FuzzingConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FuzzingConfig& FuzzingConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FuzzingConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void FuzzingConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.FuzzingConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FuzzingConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FuzzingConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.FuzzingConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.FuzzingConfig)
  return target;
}

size_t FuzzingConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.FuzzingConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FuzzingConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.FuzzingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const FuzzingConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FuzzingConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.FuzzingConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.FuzzingConfig)
    MergeFrom(*source);
  }
}

void FuzzingConfig::MergeFrom(const FuzzingConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.FuzzingConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FuzzingConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.FuzzingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FuzzingConfig::CopyFrom(const FuzzingConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.FuzzingConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FuzzingConfig::IsInitialized() const {
  return true;
}

void FuzzingConfig::InternalSwap(FuzzingConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FuzzingConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DriveActionConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DriveActionConfig>()._has_bits_);
  static void set_has_drive_action(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_trigger_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DriveActionConfig::DriveActionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.DriveActionConfig)
}
DriveActionConfig::DriveActionConfig(const DriveActionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&trigger_time_, &from.trigger_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&drive_action_) -
    reinterpret_cast<char*>(&trigger_time_)) + sizeof(drive_action_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.DriveActionConfig)
}

void DriveActionConfig::SharedCtor() {
  trigger_time_ = 0;
  drive_action_ = 100;
}

DriveActionConfig::~DriveActionConfig() {
  // @@protoc_insertion_point(destructor:apollo.simulation.DriveActionConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DriveActionConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DriveActionConfig::ArenaDtor(void* object) {
  DriveActionConfig* _this = reinterpret_cast< DriveActionConfig* >(object);
  (void)_this;
}
void DriveActionConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DriveActionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DriveActionConfig& DriveActionConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DriveActionConfig_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void DriveActionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.DriveActionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    trigger_time_ = 0;
    drive_action_ = 100;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DriveActionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.planning.DrivingAction drive_action = 1 [default = NONE];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::planning::DrivingAction_IsValid(val))) {
            _internal_set_drive_action(static_cast<::apollo::planning::DrivingAction>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double trigger_time = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_trigger_time(&has_bits);
          trigger_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DriveActionConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.DriveActionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.planning.DrivingAction drive_action = 1 [default = NONE];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_drive_action(), target);
  }

  // optional double trigger_time = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_trigger_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.DriveActionConfig)
  return target;
}

size_t DriveActionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.DriveActionConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double trigger_time = 2 [default = 0];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.planning.DrivingAction drive_action = 1 [default = NONE];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_drive_action());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveActionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.DriveActionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveActionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DriveActionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.DriveActionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.DriveActionConfig)
    MergeFrom(*source);
  }
}

void DriveActionConfig::MergeFrom(const DriveActionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.DriveActionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      trigger_time_ = from.trigger_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      drive_action_ = from.drive_action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DriveActionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.DriveActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveActionConfig::CopyFrom(const DriveActionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.DriveActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveActionConfig::IsInitialized() const {
  return true;
}

void DriveActionConfig::InternalSwap(DriveActionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(trigger_time_, other->trigger_time_);
  swap(drive_action_, other->drive_action_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DriveActionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scenario_Point::_Internal {
 public:
  using HasBits = decltype(std::declval<Scenario_Point>()._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_heading(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Scenario_Point::Scenario_Point(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.Scenario.Point)
}
Scenario_Point::Scenario_Point(const Scenario_Point& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&heading_) -
    reinterpret_cast<char*>(&x_)) + sizeof(heading_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.Scenario.Point)
}

void Scenario_Point::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&heading_) -
      reinterpret_cast<char*>(&x_)) + sizeof(heading_));
}

Scenario_Point::~Scenario_Point() {
  // @@protoc_insertion_point(destructor:apollo.simulation.Scenario.Point)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scenario_Point::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Scenario_Point::ArenaDtor(void* object) {
  Scenario_Point* _this = reinterpret_cast< Scenario_Point* >(object);
  (void)_this;
}
void Scenario_Point::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scenario_Point::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scenario_Point& Scenario_Point::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scenario_Point_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void Scenario_Point::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.Scenario.Point)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&heading_) -
        reinterpret_cast<char*>(&x_)) + sizeof(heading_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scenario_Point::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double heading = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_heading(&has_bits);
          heading_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scenario_Point::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.Scenario.Point)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // optional double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // optional double heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_heading(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.Scenario.Point)
  return target;
}

size_t Scenario_Point::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.Scenario.Point)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double heading = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scenario_Point::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.Scenario.Point)
  GOOGLE_DCHECK_NE(&from, this);
  const Scenario_Point* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scenario_Point>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.Scenario.Point)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.Scenario.Point)
    MergeFrom(*source);
  }
}

void Scenario_Point::MergeFrom(const Scenario_Point& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.Scenario.Point)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      heading_ = from.heading_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Scenario_Point::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.Scenario.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scenario_Point::CopyFrom(const Scenario_Point& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.Scenario.Point)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scenario_Point::IsInitialized() const {
  return true;
}

void Scenario_Point::InternalSwap(Scenario_Point* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scenario_Point, heading_)
      + sizeof(Scenario_Point::heading_)
      - PROTOBUF_FIELD_OFFSET(Scenario_Point, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Scenario_Point::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scenario_TL_Location::_Internal {
 public:
  using HasBits = decltype(std::declval<Scenario_TL_Location>()._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Scenario_TL_Location::Scenario_TL_Location(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.Scenario.TL.Location)
}
Scenario_TL_Location::Scenario_TL_Location(const Scenario_TL_Location& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.Scenario.TL.Location)
}

void Scenario_TL_Location::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Scenario_TL_Location::~Scenario_TL_Location() {
  // @@protoc_insertion_point(destructor:apollo.simulation.Scenario.TL.Location)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scenario_TL_Location::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Scenario_TL_Location::ArenaDtor(void* object) {
  Scenario_TL_Location* _this = reinterpret_cast< Scenario_TL_Location* >(object);
  (void)_this;
}
void Scenario_TL_Location::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scenario_TL_Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scenario_TL_Location& Scenario_TL_Location::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scenario_TL_Location_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void Scenario_TL_Location::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.Scenario.TL.Location)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&z_) -
        reinterpret_cast<char*>(&x_)) + sizeof(z_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scenario_TL_Location::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double z = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_z(&has_bits);
          z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scenario_TL_Location::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.Scenario.TL.Location)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // optional double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // optional double z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.Scenario.TL.Location)
  return target;
}

size_t Scenario_TL_Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.Scenario.TL.Location)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional double x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scenario_TL_Location::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.Scenario.TL.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Scenario_TL_Location* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scenario_TL_Location>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.Scenario.TL.Location)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.Scenario.TL.Location)
    MergeFrom(*source);
  }
}

void Scenario_TL_Location::MergeFrom(const Scenario_TL_Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.Scenario.TL.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      z_ = from.z_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Scenario_TL_Location::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.Scenario.TL.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scenario_TL_Location::CopyFrom(const Scenario_TL_Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.Scenario.TL.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scenario_TL_Location::IsInitialized() const {
  return true;
}

void Scenario_TL_Location::InternalSwap(Scenario_TL_Location* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scenario_TL_Location, z_)
      + sizeof(Scenario_TL_Location::z_)
      - PROTOBUF_FIELD_OFFSET(Scenario_TL_Location, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Scenario_TL_Location::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scenario_TL_State::_Internal {
 public:
  using HasBits = decltype(std::declval<Scenario_TL_State>()._has_bits_);
  static void set_has_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_blink(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_keep_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Scenario_TL_State::Scenario_TL_State(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.Scenario.TL.State)
}
Scenario_TL_State::Scenario_TL_State(const Scenario_TL_State& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&blink_, &from.blink_,
    static_cast<size_t>(reinterpret_cast<char*>(&keep_time_) -
    reinterpret_cast<char*>(&blink_)) + sizeof(keep_time_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.Scenario.TL.State)
}

void Scenario_TL_State::SharedCtor() {
  blink_ = false;
  color_ = 3;
  keep_time_ = 10;
}

Scenario_TL_State::~Scenario_TL_State() {
  // @@protoc_insertion_point(destructor:apollo.simulation.Scenario.TL.State)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scenario_TL_State::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Scenario_TL_State::ArenaDtor(void* object) {
  Scenario_TL_State* _this = reinterpret_cast< Scenario_TL_State* >(object);
  (void)_this;
}
void Scenario_TL_State::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scenario_TL_State::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scenario_TL_State& Scenario_TL_State::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scenario_TL_State_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void Scenario_TL_State::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.Scenario.TL.State)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    blink_ = false;
    color_ = 3;
    keep_time_ = 10;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scenario_TL_State::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.perception.TrafficLight.Color color = 1 [default = GREEN];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::TrafficLight_Color_IsValid(val))) {
            _internal_set_color(static_cast<::apollo::perception::TrafficLight_Color>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional bool blink = 2 [default = false];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_blink(&has_bits);
          blink_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double keep_time = 3 [default = 10];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_keep_time(&has_bits);
          keep_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scenario_TL_State::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.Scenario.TL.State)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.TrafficLight.Color color = 1 [default = GREEN];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_color(), target);
  }

  // optional bool blink = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_blink(), target);
  }

  // optional double keep_time = 3 [default = 10];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_keep_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.Scenario.TL.State)
  return target;
}

size_t Scenario_TL_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.Scenario.TL.State)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool blink = 2 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional .apollo.perception.TrafficLight.Color color = 1 [default = GREEN];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_color());
    }

    // optional double keep_time = 3 [default = 10];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scenario_TL_State::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.Scenario.TL.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Scenario_TL_State* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scenario_TL_State>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.Scenario.TL.State)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.Scenario.TL.State)
    MergeFrom(*source);
  }
}

void Scenario_TL_State::MergeFrom(const Scenario_TL_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.Scenario.TL.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      blink_ = from.blink_;
    }
    if (cached_has_bits & 0x00000002u) {
      color_ = from.color_;
    }
    if (cached_has_bits & 0x00000004u) {
      keep_time_ = from.keep_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Scenario_TL_State::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.Scenario.TL.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scenario_TL_State::CopyFrom(const Scenario_TL_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.Scenario.TL.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scenario_TL_State::IsInitialized() const {
  return true;
}

void Scenario_TL_State::InternalSwap(Scenario_TL_State* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(blink_, other->blink_);
  swap(color_, other->color_);
  swap(keep_time_, other->keep_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scenario_TL_State::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scenario_TL::_Internal {
 public:
  using HasBits = decltype(std::declval<Scenario_TL>()._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::simulation::Scenario_TL_Location& location(const Scenario_TL* msg);
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_trigger_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_trigger_value(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::apollo::simulation::Scenario_TL_State& initial_state(const Scenario_TL* msg);
  static void set_has_initial_state(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::simulation::Scenario_TL_Location&
Scenario_TL::_Internal::location(const Scenario_TL* msg) {
  return *msg->location_;
}
const ::apollo::simulation::Scenario_TL_State&
Scenario_TL::_Internal::initial_state(const Scenario_TL* msg) {
  return *msg->initial_state_;
}
Scenario_TL::Scenario_TL(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  state_group_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.Scenario.TL)
}
Scenario_TL::Scenario_TL(const Scenario_TL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      state_group_(from.state_group_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_id()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  if (from._internal_has_location()) {
    location_ = new ::apollo::simulation::Scenario_TL_Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  if (from._internal_has_initial_state()) {
    initial_state_ = new ::apollo::simulation::Scenario_TL_State(*from.initial_state_);
  } else {
    initial_state_ = nullptr;
  }
  ::memcpy(&trigger_type_, &from.trigger_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&trigger_value_) -
    reinterpret_cast<char*>(&trigger_type_)) + sizeof(trigger_value_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.Scenario.TL)
}

void Scenario_TL::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&location_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&trigger_type_) -
      reinterpret_cast<char*>(&location_)) + sizeof(trigger_type_));
  trigger_value_ = 30;
}

Scenario_TL::~Scenario_TL() {
  // @@protoc_insertion_point(destructor:apollo.simulation.Scenario.TL)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scenario_TL::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete initial_state_;
}

void Scenario_TL::ArenaDtor(void* object) {
  Scenario_TL* _this = reinterpret_cast< Scenario_TL* >(object);
  (void)_this;
}
void Scenario_TL::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scenario_TL::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scenario_TL& Scenario_TL::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scenario_TL_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void Scenario_TL::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.Scenario.TL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  state_group_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      id_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(location_ != nullptr);
      location_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(initial_state_ != nullptr);
      initial_state_->Clear();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    trigger_type_ = 0;
    trigger_value_ = 30;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scenario_TL::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.TL.id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.TL.Location location = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.TL.TriggerType trigger_type = 3 [default = NA];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::simulation::Scenario_TL_TriggerType_IsValid(val))) {
            _internal_set_trigger_type(static_cast<::apollo::simulation::Scenario_TL_TriggerType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double trigger_value = 4 [default = 30];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_trigger_value(&has_bits);
          trigger_value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.TL.State initial_state = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.simulation.Scenario.TL.State state_group = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_state_group(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scenario_TL::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.Scenario.TL)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.TL.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // optional .apollo.simulation.Scenario.TL.Location location = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::location(this), target, stream);
  }

  // optional .apollo.simulation.Scenario.TL.TriggerType trigger_type = 3 [default = NA];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_trigger_type(), target);
  }

  // optional double trigger_value = 4 [default = 30];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_trigger_value(), target);
  }

  // optional .apollo.simulation.Scenario.TL.State initial_state = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::initial_state(this), target, stream);
  }

  // repeated .apollo.simulation.Scenario.TL.State state_group = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_state_group_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_state_group(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.Scenario.TL)
  return target;
}

size_t Scenario_TL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.Scenario.TL)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.simulation.Scenario.TL.State state_group = 6;
  total_size += 1UL * this->_internal_state_group_size();
  for (const auto& msg : this->state_group_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_id());
    }

    // optional .apollo.simulation.Scenario.TL.Location location = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *location_);
    }

    // optional .apollo.simulation.Scenario.TL.State initial_state = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *initial_state_);
    }

    // optional .apollo.simulation.Scenario.TL.TriggerType trigger_type = 3 [default = NA];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_trigger_type());
    }

    // optional double trigger_value = 4 [default = 30];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scenario_TL::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.Scenario.TL)
  GOOGLE_DCHECK_NE(&from, this);
  const Scenario_TL* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scenario_TL>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.Scenario.TL)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.Scenario.TL)
    MergeFrom(*source);
  }
}

void Scenario_TL::MergeFrom(const Scenario_TL& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.Scenario.TL)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  state_group_.MergeFrom(from.state_group_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_id(from._internal_id());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_location()->::apollo::simulation::Scenario_TL_Location::MergeFrom(from._internal_location());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_initial_state()->::apollo::simulation::Scenario_TL_State::MergeFrom(from._internal_initial_state());
    }
    if (cached_has_bits & 0x00000008u) {
      trigger_type_ = from.trigger_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      trigger_value_ = from.trigger_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Scenario_TL::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.Scenario.TL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scenario_TL::CopyFrom(const Scenario_TL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.Scenario.TL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scenario_TL::IsInitialized() const {
  return true;
}

void Scenario_TL::InternalSwap(Scenario_TL* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  state_group_.InternalSwap(&other->state_group_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scenario_TL, trigger_type_)
      + sizeof(Scenario_TL::trigger_type_)
      - PROTOBUF_FIELD_OFFSET(Scenario_TL, location_)>(
          reinterpret_cast<char*>(&location_),
          reinterpret_cast<char*>(&other->location_));
  swap(trigger_value_, other->trigger_value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scenario_TL::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Scenario::_Internal {
 public:
  using HasBits = decltype(std::declval<Scenario>()._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::simulation::Scenario_Point& start(const Scenario* msg);
  static void set_has_start(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::apollo::simulation::Scenario_Point& end(const Scenario* msg);
  static void set_has_end(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::apollo::simulation::Scenario_Point& parking_point(const Scenario* msg);
  static void set_has_parking_point(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_log_file_start_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_log_file_end_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::apollo::routing::RoutingRequest& routing_request(const Scenario* msg);
  static void set_has_routing_request(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_map_dir(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::simulation::GradingConfig& grade_config(const Scenario* msg);
  static void set_has_grade_config(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::apollo::simulation::FuzzingConfig& fuzzing_config(const Scenario* msg);
  static void set_has_fuzzing_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_simulator_time(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_start_velocity(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_start_acceleration(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_base_grade_config_file(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_detect_distance(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_default_light_behavior(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_red_time(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_green_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_yellow_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_backtrack_time(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_vehicle(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_traffic_flow(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
};

const ::apollo::simulation::Scenario_Point&
Scenario::_Internal::start(const Scenario* msg) {
  return *msg->start_;
}
const ::apollo::simulation::Scenario_Point&
Scenario::_Internal::end(const Scenario* msg) {
  return *msg->end_;
}
const ::apollo::simulation::Scenario_Point&
Scenario::_Internal::parking_point(const Scenario* msg) {
  return *msg->parking_point_;
}
const ::apollo::routing::RoutingRequest&
Scenario::_Internal::routing_request(const Scenario* msg) {
  return *msg->routing_request_;
}
const ::apollo::simulation::GradingConfig&
Scenario::_Internal::grade_config(const Scenario* msg) {
  return *msg->grade_config_;
}
const ::apollo::simulation::FuzzingConfig&
Scenario::_Internal::fuzzing_config(const Scenario* msg) {
  return *msg->fuzzing_config_;
}
void Scenario::clear_routing_request() {
  if (routing_request_ != nullptr) routing_request_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
void Scenario::clear_grade_config() {
  if (grade_config_ != nullptr) grade_config_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
void Scenario::clear_agent() {
  agent_.Clear();
}
Scenario::Scenario(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  origin_log_file_path_(arena),
  agent_(arena),
  drive_action_config_(arena),
  traffic_lights_(arena),
  select_default_metric_(arena),
  deselect_default_metric_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apollo.simulation.Scenario)
}
Scenario::Scenario(const Scenario& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      origin_log_file_path_(from.origin_log_file_path_),
      agent_(from.agent_),
      drive_action_config_(from.drive_action_config_),
      traffic_lights_(from.traffic_lights_),
      select_default_metric_(from.select_default_metric_),
      deselect_default_metric_(from.deselect_default_metric_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_name()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_description()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  map_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_map_dir()) {
    map_dir_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_map_dir(), 
      GetArena());
  }
  base_grade_config_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_base_grade_config_file()) {
    base_grade_config_file_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_base_grade_config_file(), 
      GetArena());
  }
  vehicle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_vehicle()) {
    vehicle_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vehicle(), 
      GetArena());
  }
  if (from._internal_has_start()) {
    start_ = new ::apollo::simulation::Scenario_Point(*from.start_);
  } else {
    start_ = nullptr;
  }
  if (from._internal_has_end()) {
    end_ = new ::apollo::simulation::Scenario_Point(*from.end_);
  } else {
    end_ = nullptr;
  }
  if (from._internal_has_parking_point()) {
    parking_point_ = new ::apollo::simulation::Scenario_Point(*from.parking_point_);
  } else {
    parking_point_ = nullptr;
  }
  if (from._internal_has_routing_request()) {
    routing_request_ = new ::apollo::routing::RoutingRequest(*from.routing_request_);
  } else {
    routing_request_ = nullptr;
  }
  if (from._internal_has_grade_config()) {
    grade_config_ = new ::apollo::simulation::GradingConfig(*from.grade_config_);
  } else {
    grade_config_ = nullptr;
  }
  if (from._internal_has_fuzzing_config()) {
    fuzzing_config_ = new ::apollo::simulation::FuzzingConfig(*from.fuzzing_config_);
  } else {
    fuzzing_config_ = nullptr;
  }
  ::memcpy(&log_file_start_time_, &from.log_file_start_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&backtrack_time_) -
    reinterpret_cast<char*>(&log_file_start_time_)) + sizeof(backtrack_time_));
  // @@protoc_insertion_point(copy_constructor:apollo.simulation.Scenario)
}

void Scenario::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Scenario_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  map_dir_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_grade_config_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vehicle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&start_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&traffic_flow_) -
      reinterpret_cast<char*>(&start_)) + sizeof(traffic_flow_));
  detect_distance_ = 120;
  red_time_ = 15;
  green_time_ = 13;
  yellow_time_ = 3;
  backtrack_time_ = 1;
}

Scenario::~Scenario() {
  // @@protoc_insertion_point(destructor:apollo.simulation.Scenario)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Scenario::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  map_dir_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  base_grade_config_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  vehicle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
  if (this != internal_default_instance()) delete parking_point_;
  if (this != internal_default_instance()) delete routing_request_;
  if (this != internal_default_instance()) delete grade_config_;
  if (this != internal_default_instance()) delete fuzzing_config_;
}

void Scenario::ArenaDtor(void* object) {
  Scenario* _this = reinterpret_cast< Scenario* >(object);
  (void)_this;
}
void Scenario::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Scenario::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scenario& Scenario::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Scenario_modules_2fcommon_5fmsgs_2fsimulation_5fmsgs_2fscenario_2eproto.base);
  return *internal_default_instance();
}


void Scenario::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.simulation.Scenario)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_log_file_path_.Clear();
  agent_.Clear();
  drive_action_config_.Clear();
  traffic_lights_.Clear();
  select_default_metric_.Clear();
  deselect_default_metric_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      map_dir_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      base_grade_config_file_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      vehicle_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(start_ != nullptr);
      start_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(end_ != nullptr);
      end_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(parking_point_ != nullptr);
      parking_point_->Clear();
    }
  }
  if (cached_has_bits & 0x00000700u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(routing_request_ != nullptr);
      routing_request_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(grade_config_ != nullptr);
      grade_config_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(fuzzing_config_ != nullptr);
      fuzzing_config_->Clear();
    }
  }
  if (cached_has_bits & 0x0000f800u) {
    ::memset(&log_file_start_time_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&simulator_time_) -
        reinterpret_cast<char*>(&log_file_start_time_)) + sizeof(simulator_time_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&default_light_behavior_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&traffic_flow_) -
        reinterpret_cast<char*>(&default_light_behavior_)) + sizeof(traffic_flow_));
    detect_distance_ = 120;
    red_time_ = 15;
    green_time_ = 13;
    yellow_time_ = 3;
    backtrack_time_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Scenario::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.description");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.Point start = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_start(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.Point end = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_end(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.Point parking_point = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_parking_point(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string origin_log_file_path = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_origin_log_file_path();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.origin_log_file_path");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // optional double log_file_start_time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_log_file_start_time(&has_bits);
          log_file_start_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double log_file_end_time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          _Internal::set_has_log_file_end_time(&has_bits);
          log_file_end_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.routing.RoutingRequest routing_request = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_routing_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string map_dir = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_map_dir();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.map_dir");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.GradingConfig grade_config = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_grade_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.simulation.AgentConfig agent = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_agent(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .apollo.simulation.DriveActionConfig drive_action_config = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_drive_action_config(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.FuzzingConfig fuzzing_config = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_fuzzing_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 simulator_time = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_simulator_time(&has_bits);
          simulator_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double start_velocity = 16 [default = 0];
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 129)) {
          _Internal::set_has_start_velocity(&has_bits);
          start_velocity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double start_acceleration = 17 [default = 0];
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 137)) {
          _Internal::set_has_start_acceleration(&has_bits);
          start_acceleration_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional string base_grade_config_file = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_base_grade_config_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.base_grade_config_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double detect_distance = 19 [default = 120];
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 153)) {
          _Internal::set_has_detect_distance(&has_bits);
          detect_distance_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.DefaultLightBehavior default_light_behavior = 20 [default = ALWAYS_GREEN];
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::simulation::Scenario_DefaultLightBehavior_IsValid(val))) {
            _internal_set_default_light_behavior(static_cast<::apollo::simulation::Scenario_DefaultLightBehavior>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(20, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double red_time = 21 [default = 15];
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 169)) {
          _Internal::set_has_red_time(&has_bits);
          red_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double green_time = 22 [default = 13];
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 177)) {
          _Internal::set_has_green_time(&has_bits);
          green_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double yellow_time = 23 [default = 3];
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 185)) {
          _Internal::set_has_yellow_time(&has_bits);
          yellow_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.simulation.Scenario.TL traffic_lights = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_traffic_lights(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<194>(ptr));
        } else goto handle_unusual;
        continue;
      // optional .apollo.simulation.Scenario.Mode mode = 25 [default = WORLDSIM];
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::simulation::Scenario_Mode_IsValid(val))) {
            _internal_set_mode(static_cast<::apollo::simulation::Scenario_Mode>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(25, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // repeated string select_default_metric = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 210)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_select_default_metric();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.select_default_metric");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<210>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string deselect_default_metric = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 218)) {
          ptr -= 2;
          do {
            ptr += 2;
            auto str = _internal_add_deselect_default_metric();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.deselect_default_metric");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<218>(ptr));
        } else goto handle_unusual;
        continue;
      // optional double backtrack_time = 28 [default = 1];
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 225)) {
          _Internal::set_has_backtrack_time(&has_bits);
          backtrack_time_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional string vehicle = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 234)) {
          auto str = _internal_mutable_vehicle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.simulation.Scenario.vehicle");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool traffic_flow = 30 [default = false];
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          _Internal::set_has_traffic_flow(&has_bits);
          traffic_flow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Scenario::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.simulation.Scenario)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // optional string description = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // optional .apollo.simulation.Scenario.Point start = 3;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::start(this), target, stream);
  }

  // optional .apollo.simulation.Scenario.Point end = 4;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::end(this), target, stream);
  }

  // optional .apollo.simulation.Scenario.Point parking_point = 5;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::parking_point(this), target, stream);
  }

  // repeated string origin_log_file_path = 6;
  for (int i = 0, n = this->_internal_origin_log_file_path_size(); i < n; i++) {
    const auto& s = this->_internal_origin_log_file_path(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.origin_log_file_path");
    target = stream->WriteString(6, s, target);
  }

  // optional double log_file_start_time = 7;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_log_file_start_time(), target);
  }

  // optional double log_file_end_time = 8;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_log_file_end_time(), target);
  }

  // optional .apollo.routing.RoutingRequest routing_request = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::routing_request(this), target, stream);
  }

  // optional string map_dir = 10;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_map_dir().data(), static_cast<int>(this->_internal_map_dir().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.map_dir");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_map_dir(), target);
  }

  // optional .apollo.simulation.GradingConfig grade_config = 11;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::grade_config(this), target, stream);
  }

  // repeated .apollo.simulation.AgentConfig agent = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_agent_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, this->_internal_agent(i), target, stream);
  }

  // repeated .apollo.simulation.DriveActionConfig drive_action_config = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_drive_action_config_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, this->_internal_drive_action_config(i), target, stream);
  }

  // optional .apollo.simulation.FuzzingConfig fuzzing_config = 14;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::fuzzing_config(this), target, stream);
  }

  // optional int32 simulator_time = 15;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(15, this->_internal_simulator_time(), target);
  }

  // optional double start_velocity = 16 [default = 0];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(16, this->_internal_start_velocity(), target);
  }

  // optional double start_acceleration = 17 [default = 0];
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(17, this->_internal_start_acceleration(), target);
  }

  // optional string base_grade_config_file = 18;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_base_grade_config_file().data(), static_cast<int>(this->_internal_base_grade_config_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.base_grade_config_file");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_base_grade_config_file(), target);
  }

  // optional double detect_distance = 19 [default = 120];
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(19, this->_internal_detect_distance(), target);
  }

  // optional .apollo.simulation.Scenario.DefaultLightBehavior default_light_behavior = 20 [default = ALWAYS_GREEN];
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      20, this->_internal_default_light_behavior(), target);
  }

  // optional double red_time = 21 [default = 15];
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(21, this->_internal_red_time(), target);
  }

  // optional double green_time = 22 [default = 13];
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(22, this->_internal_green_time(), target);
  }

  // optional double yellow_time = 23 [default = 3];
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(23, this->_internal_yellow_time(), target);
  }

  // repeated .apollo.simulation.Scenario.TL traffic_lights = 24;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_traffic_lights_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(24, this->_internal_traffic_lights(i), target, stream);
  }

  // optional .apollo.simulation.Scenario.Mode mode = 25 [default = WORLDSIM];
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      25, this->_internal_mode(), target);
  }

  // repeated string select_default_metric = 26;
  for (int i = 0, n = this->_internal_select_default_metric_size(); i < n; i++) {
    const auto& s = this->_internal_select_default_metric(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.select_default_metric");
    target = stream->WriteString(26, s, target);
  }

  // repeated string deselect_default_metric = 27;
  for (int i = 0, n = this->_internal_deselect_default_metric_size(); i < n; i++) {
    const auto& s = this->_internal_deselect_default_metric(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.deselect_default_metric");
    target = stream->WriteString(27, s, target);
  }

  // optional double backtrack_time = 28 [default = 1];
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(28, this->_internal_backtrack_time(), target);
  }

  // optional string vehicle = 29;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_vehicle().data(), static_cast<int>(this->_internal_vehicle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.simulation.Scenario.vehicle");
    target = stream->WriteStringMaybeAliased(
        29, this->_internal_vehicle(), target);
  }

  // optional bool traffic_flow = 30 [default = false];
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(30, this->_internal_traffic_flow(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.simulation.Scenario)
  return target;
}

size_t Scenario::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.simulation.Scenario)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string origin_log_file_path = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(origin_log_file_path_.size());
  for (int i = 0, n = origin_log_file_path_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      origin_log_file_path_.Get(i));
  }

  // repeated .apollo.simulation.AgentConfig agent = 12;
  total_size += 1UL * this->_internal_agent_size();
  for (const auto& msg : this->agent_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.simulation.DriveActionConfig drive_action_config = 13;
  total_size += 1UL * this->_internal_drive_action_config_size();
  for (const auto& msg : this->drive_action_config_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .apollo.simulation.Scenario.TL traffic_lights = 24;
  total_size += 2UL * this->_internal_traffic_lights_size();
  for (const auto& msg : this->traffic_lights_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string select_default_metric = 26;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(select_default_metric_.size());
  for (int i = 0, n = select_default_metric_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      select_default_metric_.Get(i));
  }

  // repeated string deselect_default_metric = 27;
  total_size += 2 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(deselect_default_metric_.size());
  for (int i = 0, n = deselect_default_metric_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      deselect_default_metric_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string description = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_description());
    }

    // optional string map_dir = 10;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_map_dir());
    }

    // optional string base_grade_config_file = 18;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_base_grade_config_file());
    }

    // optional string vehicle = 29;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_vehicle());
    }

    // optional .apollo.simulation.Scenario.Point start = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *start_);
    }

    // optional .apollo.simulation.Scenario.Point end = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *end_);
    }

    // optional .apollo.simulation.Scenario.Point parking_point = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *parking_point_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .apollo.routing.RoutingRequest routing_request = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *routing_request_);
    }

    // optional .apollo.simulation.GradingConfig grade_config = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *grade_config_);
    }

    // optional .apollo.simulation.FuzzingConfig fuzzing_config = 14;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fuzzing_config_);
    }

    // optional double log_file_start_time = 7;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 8;
    }

    // optional double log_file_end_time = 8;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 8;
    }

    // optional double start_velocity = 16 [default = 0];
    if (cached_has_bits & 0x00002000u) {
      total_size += 2 + 8;
    }

    // optional double start_acceleration = 17 [default = 0];
    if (cached_has_bits & 0x00004000u) {
      total_size += 2 + 8;
    }

    // optional int32 simulator_time = 15;
    if (cached_has_bits & 0x00008000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_simulator_time());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .apollo.simulation.Scenario.DefaultLightBehavior default_light_behavior = 20 [default = ALWAYS_GREEN];
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_default_light_behavior());
    }

    // optional .apollo.simulation.Scenario.Mode mode = 25 [default = WORLDSIM];
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
    }

    // optional bool traffic_flow = 30 [default = false];
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 + 1;
    }

    // optional double detect_distance = 19 [default = 120];
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 + 8;
    }

    // optional double red_time = 21 [default = 15];
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 + 8;
    }

    // optional double green_time = 22 [default = 13];
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 + 8;
    }

    // optional double yellow_time = 23 [default = 3];
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 + 8;
    }

    // optional double backtrack_time = 28 [default = 1];
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scenario::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.simulation.Scenario)
  GOOGLE_DCHECK_NE(&from, this);
  const Scenario* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Scenario>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.simulation.Scenario)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.simulation.Scenario)
    MergeFrom(*source);
  }
}

void Scenario::MergeFrom(const Scenario& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.simulation.Scenario)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  origin_log_file_path_.MergeFrom(from.origin_log_file_path_);
  agent_.MergeFrom(from.agent_);
  drive_action_config_.MergeFrom(from.drive_action_config_);
  traffic_lights_.MergeFrom(from.traffic_lights_);
  select_default_metric_.MergeFrom(from.select_default_metric_);
  deselect_default_metric_.MergeFrom(from.deselect_default_metric_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_set_map_dir(from._internal_map_dir());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_set_base_grade_config_file(from._internal_base_grade_config_file());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_set_vehicle(from._internal_vehicle());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_start()->::apollo::simulation::Scenario_Point::MergeFrom(from._internal_start());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_end()->::apollo::simulation::Scenario_Point::MergeFrom(from._internal_end());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_parking_point()->::apollo::simulation::Scenario_Point::MergeFrom(from._internal_parking_point());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_routing_request()->::apollo::routing::RoutingRequest::MergeFrom(from._internal_routing_request());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_grade_config()->::apollo::simulation::GradingConfig::MergeFrom(from._internal_grade_config());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_fuzzing_config()->::apollo::simulation::FuzzingConfig::MergeFrom(from._internal_fuzzing_config());
    }
    if (cached_has_bits & 0x00000800u) {
      log_file_start_time_ = from.log_file_start_time_;
    }
    if (cached_has_bits & 0x00001000u) {
      log_file_end_time_ = from.log_file_end_time_;
    }
    if (cached_has_bits & 0x00002000u) {
      start_velocity_ = from.start_velocity_;
    }
    if (cached_has_bits & 0x00004000u) {
      start_acceleration_ = from.start_acceleration_;
    }
    if (cached_has_bits & 0x00008000u) {
      simulator_time_ = from.simulator_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      default_light_behavior_ = from.default_light_behavior_;
    }
    if (cached_has_bits & 0x00020000u) {
      mode_ = from.mode_;
    }
    if (cached_has_bits & 0x00040000u) {
      traffic_flow_ = from.traffic_flow_;
    }
    if (cached_has_bits & 0x00080000u) {
      detect_distance_ = from.detect_distance_;
    }
    if (cached_has_bits & 0x00100000u) {
      red_time_ = from.red_time_;
    }
    if (cached_has_bits & 0x00200000u) {
      green_time_ = from.green_time_;
    }
    if (cached_has_bits & 0x00400000u) {
      yellow_time_ = from.yellow_time_;
    }
    if (cached_has_bits & 0x00800000u) {
      backtrack_time_ = from.backtrack_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Scenario::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.simulation.Scenario)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scenario::CopyFrom(const Scenario& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.simulation.Scenario)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scenario::IsInitialized() const {
  return true;
}

void Scenario::InternalSwap(Scenario* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  origin_log_file_path_.InternalSwap(&other->origin_log_file_path_);
  agent_.InternalSwap(&other->agent_);
  drive_action_config_.InternalSwap(&other->drive_action_config_);
  traffic_lights_.InternalSwap(&other->traffic_lights_);
  select_default_metric_.InternalSwap(&other->select_default_metric_);
  deselect_default_metric_.InternalSwap(&other->deselect_default_metric_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  map_dir_.Swap(&other->map_dir_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  base_grade_config_file_.Swap(&other->base_grade_config_file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  vehicle_.Swap(&other->vehicle_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Scenario, traffic_flow_)
      + sizeof(Scenario::traffic_flow_)
      - PROTOBUF_FIELD_OFFSET(Scenario, start_)>(
          reinterpret_cast<char*>(&start_),
          reinterpret_cast<char*>(&other->start_));
  swap(detect_distance_, other->detect_distance_);
  swap(red_time_, other->red_time_);
  swap(green_time_, other->green_time_);
  swap(yellow_time_, other->yellow_time_);
  swap(backtrack_time_, other->backtrack_time_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Scenario::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace simulation
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::simulation::FuzzingConfig* Arena::CreateMaybeMessage< ::apollo::simulation::FuzzingConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::FuzzingConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::DriveActionConfig* Arena::CreateMaybeMessage< ::apollo::simulation::DriveActionConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::DriveActionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::Scenario_Point* Arena::CreateMaybeMessage< ::apollo::simulation::Scenario_Point >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::Scenario_Point >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::Scenario_TL_Location* Arena::CreateMaybeMessage< ::apollo::simulation::Scenario_TL_Location >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::Scenario_TL_Location >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::Scenario_TL_State* Arena::CreateMaybeMessage< ::apollo::simulation::Scenario_TL_State >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::Scenario_TL_State >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::Scenario_TL* Arena::CreateMaybeMessage< ::apollo::simulation::Scenario_TL >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::Scenario_TL >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::simulation::Scenario* Arena::CreateMaybeMessage< ::apollo::simulation::Scenario >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apollo::simulation::Scenario >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
